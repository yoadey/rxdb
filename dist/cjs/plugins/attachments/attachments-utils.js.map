{"version":3,"file":"attachments-utils.js","names":["_rxError","require","_index","ensureSchemaSupportsAttachments","doc","schemaJson","collection","schema","jsonSchema","attachments","newRxError","link","assignMethodsToAttachment","attachment","Object","entries","forEach","funName","fun","defineProperty","get","bind","fillWriteDataForAttachmentsChange","primaryPath","storageInstance","newDocument","originalDocument","_attachments","Error","docId","originalAttachmentsIds","Set","keys","Promise","all","map","key","value","has","ensureNotFalsy","digest","data","attachmentDataString","getAttachmentData"],"sources":["../../../../src/plugins/attachments/attachments-utils.ts"],"sourcesContent":["import { newRxError } from '../../rx-error.ts';\nimport type {\n    RxAttachmentWriteData,\n    RxStorageInstance,\n    WithDeletedAndAttachments\n} from '../../types/index.d.ts';\nimport { ensureNotFalsy } from '../utils/index.ts';\n\nexport function ensureSchemaSupportsAttachments(doc: any) {\n    const schemaJson = doc.collection.schema.jsonSchema;\n    if (!schemaJson.attachments) {\n        throw newRxError('AT1', {\n            link: 'https://pubkey.github.io/rxdb/rx-attachment.html'\n        });\n    }\n}\n\nexport function assignMethodsToAttachment(attachment: any) {\n    Object\n        .entries(attachment.doc.collection.attachments)\n        .forEach(([funName, fun]) => {\n            Object.defineProperty(attachment, funName, {\n                get: () => (fun as any).bind(attachment)\n            });\n        });\n}\n\n/**\n * Fill up the missing attachment.data of the newDocument\n * so that the new document can be send to somewhere else\n * which could then receive all required attachments data\n * that it did not have before.\n */\nexport async function fillWriteDataForAttachmentsChange<RxDocType>(\n    primaryPath: string,\n    storageInstance: RxStorageInstance<RxDocType, any, any, any>,\n    newDocument: WithDeletedAndAttachments<RxDocType>,\n    originalDocument?: WithDeletedAndAttachments<RxDocType>\n): Promise<WithDeletedAndAttachments<RxDocType>> {\n\n    if (\n        !newDocument._attachments ||\n        (\n            originalDocument &&\n            !originalDocument._attachments\n        )\n    ) {\n        throw new Error('_attachments missing');\n    }\n\n    const docId: string = (newDocument as any)[primaryPath];\n    const originalAttachmentsIds = new Set(\n        originalDocument && originalDocument._attachments\n            ? Object.keys(originalDocument._attachments)\n            : []\n    );\n    await Promise.all(\n        Object\n            .entries(newDocument._attachments)\n            .map(async ([key, value]) => {\n                if (\n                    (\n                        !originalAttachmentsIds.has(key) ||\n                        (\n                            originalDocument &&\n                            ensureNotFalsy(originalDocument._attachments)[key].digest !== value.digest\n                        )\n                    ) &&\n                    !(value as RxAttachmentWriteData).data\n                ) {\n                    const attachmentDataString = await storageInstance.getAttachmentData(\n                        docId,\n                        key,\n                        value.digest\n                    );\n                    (value as RxAttachmentWriteData).data = attachmentDataString;\n                }\n            })\n    );\n\n    return newDocument;\n}\n"],"mappings":";;;;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AAMA,IAAAC,MAAA,GAAAD,OAAA;AAEO,SAASE,+BAA+BA,CAACC,GAAQ,EAAE;EACtD,IAAMC,UAAU,GAAGD,GAAG,CAACE,UAAU,CAACC,MAAM,CAACC,UAAU;EACnD,IAAI,CAACH,UAAU,CAACI,WAAW,EAAE;IACzB,MAAM,IAAAC,mBAAU,EAAC,KAAK,EAAE;MACpBC,IAAI,EAAE;IACV,CAAC,CAAC;EACN;AACJ;AAEO,SAASC,yBAAyBA,CAACC,UAAe,EAAE;EACvDC,MAAM,CACDC,OAAO,CAACF,UAAU,CAACT,GAAG,CAACE,UAAU,CAACG,WAAW,CAAC,CAC9CO,OAAO,CAAC,CAAC,CAACC,OAAO,EAAEC,GAAG,CAAC,KAAK;IACzBJ,MAAM,CAACK,cAAc,CAACN,UAAU,EAAEI,OAAO,EAAE;MACvCG,GAAG,EAAEA,CAAA,KAAOF,GAAG,CAASG,IAAI,CAACR,UAAU;IAC3C,CAAC,CAAC;EACN,CAAC,CAAC;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeS,iCAAiCA,CACnDC,WAAmB,EACnBC,eAA4D,EAC5DC,WAAiD,EACjDC,gBAAuD,EACV;EAE7C,IACI,CAACD,WAAW,CAACE,YAAY,IAErBD,gBAAgB,IAChB,CAACA,gBAAgB,CAACC,YACrB,EACH;IACE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EAC3C;EAEA,IAAMC,KAAa,GAAIJ,WAAW,CAASF,WAAW,CAAC;EACvD,IAAMO,sBAAsB,GAAG,IAAIC,GAAG,CAClCL,gBAAgB,IAAIA,gBAAgB,CAACC,YAAY,GAC3Cb,MAAM,CAACkB,IAAI,CAACN,gBAAgB,CAACC,YAAY,CAAC,GAC1C,EACV,CAAC;EACD,MAAMM,OAAO,CAACC,GAAG,CACbpB,MAAM,CACDC,OAAO,CAACU,WAAW,CAACE,YAAY,CAAC,CACjCQ,GAAG,CAAC,OAAO,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;IACzB,IACI,CACI,CAACP,sBAAsB,CAACQ,GAAG,CAACF,GAAG,CAAC,IAE5BV,gBAAgB,IAChB,IAAAa,qBAAc,EAACb,gBAAgB,CAACC,YAAY,CAAC,CAACS,GAAG,CAAC,CAACI,MAAM,KAAKH,KAAK,CAACG,MACvE,KAEL,CAAEH,KAAK,CAA2BI,IAAI,EACxC;MACE,IAAMC,oBAAoB,GAAG,MAAMlB,eAAe,CAACmB,iBAAiB,CAChEd,KAAK,EACLO,GAAG,EACHC,KAAK,CAACG,MACV,CAAC;MACAH,KAAK,CAA2BI,IAAI,GAAGC,oBAAoB;IAChE;EACJ,CAAC,CACT,CAAC;EAED,OAAOjB,WAAW;AACtB","ignoreList":[]}