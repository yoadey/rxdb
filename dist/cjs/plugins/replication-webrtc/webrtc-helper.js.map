{"version":3,"file":"webrtc-helper.js","names":["_rxjs","require","isMasterInWebRTCReplication","hashFunction","ownStorageToken","otherStorageToken","isMaster","join","sendMessageAndAwaitAnswer","handler","peer","message","requestId","id","answerPromise","firstValueFrom","response$","pipe","filter","d","response","map","send"],"sources":["../../../../src/plugins/replication-webrtc/webrtc-helper.ts"],"sourcesContent":["import type {\n    HashFunction\n} from '../../types/index.d.ts';\nimport type {\n    WebRTCConnectionHandler,\n    WebRTCMessage,\n    WebRTCResponse\n} from './webrtc-types.ts';\nimport { filter, firstValueFrom, map } from 'rxjs';\n\n\n\n/**\n * To deterministically define which peer is master and\n * which peer is fork, we compare the storage tokens.\n * But we have to hash them before, to ensure that\n * a storageToken like 'aaaaaa' is not always the master\n * for all peers.\n */\nexport async function isMasterInWebRTCReplication(\n    hashFunction: HashFunction,\n    ownStorageToken: string,\n    otherStorageToken: string\n): Promise<boolean> {\n    const isMaster =\n        await hashFunction([ownStorageToken, otherStorageToken].join('|'))\n        >\n        await hashFunction([otherStorageToken, ownStorageToken].join('|'));\n    return isMaster;\n}\n\n/**\n * Send a message to the peer and await the answer.\n * @throws with an EmptyErrorImpl if the peer connection\n * was closed before an answer was received.\n */\nexport function sendMessageAndAwaitAnswer<PeerType>(\n    handler: WebRTCConnectionHandler<PeerType>,\n    peer: PeerType,\n    message: WebRTCMessage\n): Promise<WebRTCResponse> {\n\n\n    const requestId = message.id;\n    const answerPromise = firstValueFrom(\n        handler.response$.pipe(\n            filter(d => d.peer === peer),\n            filter(d => d.response.id === requestId),\n            map(d => d.response)\n        )\n    );\n    handler.send(peer, message);\n    return answerPromise;\n}\n"],"mappings":";;;;;;;AAQA,IAAAA,KAAA,GAAAC,OAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeC,2BAA2BA,CAC7CC,YAA0B,EAC1BC,eAAuB,EACvBC,iBAAyB,EACT;EAChB,IAAMC,QAAQ,GACV,OAAMH,YAAY,CAAC,CAACC,eAAe,EAAEC,iBAAiB,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,CAAC,KAElE,MAAMJ,YAAY,CAAC,CAACE,iBAAiB,EAAED,eAAe,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC;EACtE,OAAOD,QAAQ;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASE,yBAAyBA,CACrCC,OAA0C,EAC1CC,IAAc,EACdC,OAAsB,EACC;EAGvB,IAAMC,SAAS,GAAGD,OAAO,CAACE,EAAE;EAC5B,IAAMC,aAAa,GAAG,IAAAC,oBAAc,EAChCN,OAAO,CAACO,SAAS,CAACC,IAAI,CAClB,IAAAC,YAAM,EAACC,CAAC,IAAIA,CAAC,CAACT,IAAI,KAAKA,IAAI,CAAC,EAC5B,IAAAQ,YAAM,EAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAACP,EAAE,KAAKD,SAAS,CAAC,EACxC,IAAAS,SAAG,EAACF,CAAC,IAAIA,CAAC,CAACC,QAAQ,CACvB,CACJ,CAAC;EACDX,OAAO,CAACa,IAAI,CAACZ,IAAI,EAAEC,OAAO,CAAC;EAC3B,OAAOG,aAAa;AACxB","ignoreList":[]}