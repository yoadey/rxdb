{"version":3,"file":"rx-local-document.js","names":["distinctUntilChanged","filter","map","shareReplay","startWith","overwritable","getDocumentDataOfRxChangeEvent","basePrototype","createRxDocumentConstructor","newRxError","newRxTypeError","writeSingle","flatClone","getDefaultRevision","getDefaultRxDocumentMeta","getFromMapOrThrow","getProperty","RXJS_SHARE_REPLAY_DEFAULTS","getLocalDocStateByParent","LOCAL_DOC_STATE_BY_PARENT_RESOLVED","isRxDatabase","RxDocumentParent","RxLocalDocumentClass","_RxDocumentParent","id","jsonData","parent","_this2","call","_inheritsLoose","RxLocalDocumentPrototype","isLocal","allAttachments$","document","primaryPath","primary","$","_this","state","pipe","changeEvent","documentId","docCache","getLatestDocumentData","prev","curr","_rev","docData","getCachedRxDocument","$$","db","getRxDatabaseFromLocalDocument","reactivity","getReactivityFactory","fromObservable","getLatest","_data","deleted$$","deleted$","deleted","latestDocData","get","objPath","undefined","valueObj","deepFreezeWhenDevMode","get$","isDevMode","includes","localDocument","data","get$$","incrementalModify","mutationFunction","incrementalWriteQueue","addWrite","then","result","incrementalPatch","patch","Object","entries","forEach","k","v","_saveData","newData","oldData","storageInstance","bulkWrite","previous","res","docResult","success","error","remove","writeData","_deleted","_meta","_attachments","writeResult","INIT_DONE","_init","docBaseProto","props","getOwnPropertyNames","key","exists","getOwnPropertyDescriptor","desc","defineProperty","getThrowingFun","functionName","createRxLocalDocument","newDoc","setPrototypeOf","prototype","doc","database"],"sources":["../../../../src/plugins/local-documents/rx-local-document.ts"],"sourcesContent":["import { Observable } from 'rxjs';\nimport {\n    distinctUntilChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith\n} from 'rxjs';\nimport { overwritable } from '../../overwritable.ts';\nimport { getDocumentDataOfRxChangeEvent } from '../../rx-change-event.ts';\nimport {\n    basePrototype,\n    createRxDocumentConstructor\n} from '../../rx-document.ts';\nimport {\n    newRxError,\n    newRxTypeError\n} from '../../rx-error.ts';\nimport { writeSingle } from '../../rx-storage-helper.ts';\nimport type {\n    LocalDocumentModifyFunction,\n    RxCollection,\n    RxDatabase,\n    RxDocument,\n    RxDocumentData,\n    RxDocumentWriteData,\n    RxLocalDocument,\n    RxLocalDocumentData\n} from '../../types/index.d.ts';\nimport {\n    flatClone,\n    getDefaultRevision,\n    getDefaultRxDocumentMeta,\n    getFromMapOrThrow,\n    getProperty,\n    RXJS_SHARE_REPLAY_DEFAULTS\n} from '../../plugins/utils/index.ts';\nimport { getLocalDocStateByParent, LOCAL_DOC_STATE_BY_PARENT_RESOLVED } from './local-documents-helper.ts';\nimport { isRxDatabase } from '../../rx-database.ts';\n\nconst RxDocumentParent = createRxDocumentConstructor() as any;\n\nclass RxLocalDocumentClass<DocData = any> extends RxDocumentParent {\n    constructor(\n        public readonly id: string,\n        jsonData: DocData,\n        public readonly parent: RxCollection | RxDatabase\n    ) {\n        super(null, jsonData);\n    }\n}\n\n\n\nconst RxLocalDocumentPrototype: any = {\n    get isLocal() {\n        return true;\n    },\n\n    //\n    // overwrites\n    //\n    get allAttachments$() {\n        // this is overwritten here because we cannot re-set getters on the prototype\n        throw newRxError('LD1', {\n            document: this\n        });\n    },\n    get primaryPath() {\n        return 'id';\n    },\n    get primary() {\n        return this.id;\n    },\n    get $(): Observable<RxLocalDocument<any, any>> {\n        const _this: RxLocalDocumentClass = this as any;\n        const state = getFromMapOrThrow(LOCAL_DOC_STATE_BY_PARENT_RESOLVED, this.parent);\n        return _this.parent.$.pipe(\n            filter(changeEvent => changeEvent.documentId === this.primary),\n            filter(changeEvent => changeEvent.isLocal),\n            map(changeEvent => getDocumentDataOfRxChangeEvent(changeEvent)),\n            startWith(state.docCache.getLatestDocumentData(this.primary)),\n            distinctUntilChanged((prev, curr) => prev._rev === curr._rev),\n            map(docData => state.docCache.getCachedRxDocument(docData)),\n            shareReplay(RXJS_SHARE_REPLAY_DEFAULTS)\n        ) as Observable<any>;\n    },\n    get $$(): any {\n        const _this: RxLocalDocumentClass = this as any;\n        const db = getRxDatabaseFromLocalDocument(_this);\n        const reactivity = db.getReactivityFactory();\n        return reactivity.fromObservable(\n            _this.$,\n            _this.getLatest()._data,\n            db\n        );\n    },\n    get deleted$$() {\n        const _this: RxLocalDocumentClass = this as any;\n        const db = getRxDatabaseFromLocalDocument(_this);\n        const reactivity = db.getReactivityFactory();\n        return reactivity.fromObservable(\n            _this.deleted$,\n            _this.getLatest().deleted,\n            db\n        );\n    },\n    getLatest(this: RxLocalDocument<any>): RxLocalDocument<any> {\n        const state = getFromMapOrThrow(LOCAL_DOC_STATE_BY_PARENT_RESOLVED, this.parent);\n        const latestDocData = state.docCache.getLatestDocumentData(this.primary);\n        return state.docCache.getCachedRxDocument(latestDocData) as any;\n    },\n    get(this: RxDocument, objPath: string) {\n        objPath = 'data.' + objPath;\n\n        if (!this._data) {\n            return undefined;\n        }\n        if (typeof objPath !== 'string') {\n            throw newRxTypeError('LD2', {\n                objPath\n            });\n        }\n\n        let valueObj = getProperty(this._data, objPath);\n        valueObj = overwritable.deepFreezeWhenDevMode(valueObj);\n        return valueObj;\n    },\n    get$(this: RxDocument, objPath: string) {\n        objPath = 'data.' + objPath;\n\n        if (overwritable.isDevMode()) {\n            if (objPath.includes('.item.')) {\n                throw newRxError('LD3', {\n                    objPath\n                });\n            }\n            if (objPath === this.primaryPath) {\n                throw newRxError('LD4');\n            }\n        }\n        return this.$\n            .pipe(\n                map(localDocument => localDocument._data),\n                map(data => getProperty(data, objPath)),\n                distinctUntilChanged()\n            );\n    },\n    get$$(this: RxDocument, objPath: string) {\n        const db = getRxDatabaseFromLocalDocument(this as any);\n        const reactivity = db.getReactivityFactory();\n        return reactivity.fromObservable(\n            this.get$(objPath),\n            this.getLatest().get(objPath),\n            db\n        );\n    },\n    async incrementalModify<DocData>(\n        this: RxLocalDocument<any, DocData>,\n        mutationFunction: LocalDocumentModifyFunction<any>\n    ) {\n        const state = await getLocalDocStateByParent(this.parent);\n\n        return state.incrementalWriteQueue.addWrite(\n            this._data as any,\n            async (docData) => {\n                docData.data = await mutationFunction(docData.data, this);\n                return docData;\n            }\n        ).then(result => state.docCache.getCachedRxDocument(result as any));\n    },\n    incrementalPatch(patch: Partial<any>) {\n        return this.incrementalModify((docData: any) => {\n            Object\n                .entries(patch)\n                .forEach(([k, v]) => {\n                    docData[k] = v;\n                });\n            return docData;\n        });\n    },\n    async _saveData(this: RxLocalDocument<any>, newData: RxDocumentData<RxLocalDocumentData>) {\n        const state = await getLocalDocStateByParent(this.parent);\n        const oldData: RxDocumentData<RxLocalDocumentData> = this._data;\n        newData.id = (this as any).id;\n        return state.storageInstance.bulkWrite([{\n            previous: oldData,\n            document: newData\n        }], 'local-document-save-data')\n            .then((res) => {\n                const docResult = res.success[0];\n                if (!docResult) {\n                    throw res.error[0];\n                }\n                newData = flatClone(newData);\n                newData._rev = docResult._rev;\n            });\n    },\n\n    async remove(this: RxLocalDocument<any>): Promise<RxLocalDocument<any>> {\n        const state = await getLocalDocStateByParent(this.parent);\n        const writeData: RxDocumentWriteData<RxLocalDocumentData> = {\n            id: this._data.id,\n            data: {},\n            _deleted: true,\n            _meta: getDefaultRxDocumentMeta(),\n            _rev: getDefaultRevision(),\n            _attachments: {}\n        };\n        return writeSingle(state.storageInstance, {\n            previous: this._data,\n            document: writeData\n        }, 'local-document-remove')\n            .then((writeResult) => state.docCache.getCachedRxDocument(writeResult) as any);\n    }\n};\n\n\n\nlet INIT_DONE = false;\nconst _init = () => {\n    if (INIT_DONE) return;\n    else INIT_DONE = true;\n\n    // add functions of RxDocument\n    const docBaseProto = basePrototype;\n    const props = Object.getOwnPropertyNames(docBaseProto);\n    props.forEach(key => {\n        const exists = Object.getOwnPropertyDescriptor(RxLocalDocumentPrototype, key);\n        if (exists) return;\n        const desc: any = Object.getOwnPropertyDescriptor(docBaseProto, key);\n        Object.defineProperty(RxLocalDocumentPrototype, key, desc);\n    });\n\n\n    /**\n     * Overwrite things that do not work on local documents\n     * with a throwing function.\n     */\n    const getThrowingFun = (k: string) => () => {\n        throw newRxError('LD6', {\n            functionName: k\n        });\n    };\n    [\n        'populate',\n        'update',\n        'putAttachment',\n        'getAttachment',\n        'allAttachments'\n    ].forEach((k: string) => RxLocalDocumentPrototype[k] = getThrowingFun(k));\n};\n\n\n\nexport function createRxLocalDocument<DocData>(\n    data: RxDocumentData<RxLocalDocumentData<DocData>>,\n    parent: any\n): RxLocalDocument<DocData> {\n    _init();\n    const newDoc = new RxLocalDocumentClass(data.id, data, parent);\n    Object.setPrototypeOf(newDoc, RxLocalDocumentPrototype);\n    newDoc.prototype = RxLocalDocumentPrototype;\n    return newDoc as any;\n}\n\n\nexport function getRxDatabaseFromLocalDocument(doc: RxLocalDocument<any> | RxLocalDocumentClass) {\n    const parent = doc.parent;\n    if (isRxDatabase(parent)) {\n        return parent;\n    } else {\n        return (parent as RxCollection).database;\n    }\n}\n"],"mappings":"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","ignoreList":[]}