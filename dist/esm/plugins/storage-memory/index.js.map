{"version":3,"file":"index.js","names":["ensureRxStorageInstanceParamsAreCorrect","RXDB_VERSION","createMemoryStorageInstance","COLLECTION_STATES","Map","getRxStorageMemory","settings","storage","name","rxdbVersion","collectionStates","createStorageInstance","params","useSettings","Object","assign","options"],"sources":["../../../../src/plugins/storage-memory/index.ts"],"sourcesContent":["import { ensureRxStorageInstanceParamsAreCorrect } from '../../rx-storage-helper.ts';\nimport type { RxStorageInstanceCreationParams } from '../../types/index.d.ts';\nimport { RXDB_VERSION } from '../utils/utils-rxdb-version.ts';\nimport type {\n    RxStorageMemory,\n    RxStorageMemoryInstanceCreationOptions,\n    RxStorageMemorySettings\n} from './memory-types.ts';\nimport {\n    createMemoryStorageInstance,\n    RxStorageInstanceMemory\n} from './rx-storage-instance-memory.ts';\n\n/**\n * Keep the state even when the storage instance is closed.\n * This makes it easier to use the memory storage\n * to test filesystem-like and multiInstance behaviors.\n */\nconst COLLECTION_STATES = new Map();\n\nexport function getRxStorageMemory(\n    settings: RxStorageMemorySettings = {}\n): RxStorageMemory {\n\n    const storage: RxStorageMemory = {\n        name: 'memory',\n        rxdbVersion: RXDB_VERSION,\n        collectionStates: COLLECTION_STATES,\n        createStorageInstance<RxDocType>(\n            params: RxStorageInstanceCreationParams<RxDocType, RxStorageMemoryInstanceCreationOptions>\n        ): Promise<RxStorageInstanceMemory<RxDocType>> {\n            ensureRxStorageInstanceParamsAreCorrect(params);\n            const useSettings = Object.assign(\n                {},\n                settings,\n                params.options\n            );\n\n\n            return createMemoryStorageInstance(this, params, useSettings);\n        }\n    };\n\n    return storage;\n}\n\n\nexport * from './memory-helper.ts';\nexport * from './binary-search-bounds.ts';\nexport * from './memory-types.ts';\nexport * from './memory-indexes.ts';\nexport * from './rx-storage-instance-memory.ts';\n"],"mappings":"AAAA,SAASA,uCAAuC,QAAQ,4BAA4B;AAEpF,SAASC,YAAY,QAAQ,gCAAgC;AAM7D,SACIC,2BAA2B,QAExB,iCAAiC;;AAExC;AACA;AACA;AACA;AACA;AACA,IAAMC,iBAAiB,GAAG,IAAIC,GAAG,CAAC,CAAC;AAEnC,OAAO,SAASC,kBAAkBA,CAC9BC,QAAiC,GAAG,CAAC,CAAC,EACvB;EAEf,IAAMC,OAAwB,GAAG;IAC7BC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAER,YAAY;IACzBS,gBAAgB,EAAEP,iBAAiB;IACnCQ,qBAAqBA,CACjBC,MAA0F,EAC/C;MAC3CZ,uCAAuC,CAACY,MAAM,CAAC;MAC/C,IAAMC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAC7B,CAAC,CAAC,EACFT,QAAQ,EACRM,MAAM,CAACI,OACX,CAAC;MAGD,OAAOd,2BAA2B,CAAC,IAAI,EAAEU,MAAM,EAAEC,WAAW,CAAC;IACjE;EACJ,CAAC;EAED,OAAON,OAAO;AAClB;AAGA,cAAc,oBAAoB;AAClC,cAAc,2BAA2B;AACzC,cAAc,mBAAmB;AACjC,cAAc,qBAAqB;AACnC,cAAc,iCAAiC","ignoreList":[]}