{"version":3,"file":"rx-query-single-result.js","names":["_docCache","require","_index","RxQuerySingleResult","exports","collection","docsDataFromStorageInstance","count","time","now","documents","mapDocumentsDataToCacheDocs","_createClass2","default","key","get","overwriteGetterForCaching","map","d","_data","Map","forEach","set","primary","i","length","doc"],"sources":["../../src/rx-query-single-result.ts"],"sourcesContent":["import { mapDocumentsDataToCacheDocs } from './doc-cache.ts';\nimport { now, overwriteGetterForCaching } from './plugins/utils/index.ts';\nimport type {\n    RxCollection,\n    RxDocument,\n    RxDocumentData\n} from './types';\n\n/**\n * RxDB needs the query results in multiple formats.\n * Sometimes as a Map or an array with only the documentData.\n * For better performance we work with this class\n * that initializes stuff lazily so that\n * we can directly work with the query results after RxQuery.exec()\n */\nexport class RxQuerySingleResult<RxDocType>{\n    /**\n     * Time at which the current _result state was created.\n     * Used to determine if the result set has changed since X\n     * so that we do not emit the same result multiple times on subscription.\n     */\n    public readonly time = now();\n    public readonly documents: RxDocument<RxDocType>[];\n    constructor(\n        public readonly collection: RxCollection<RxDocType>,\n        // only used internally, do not use outside, use this.docsData instead\n        docsDataFromStorageInstance: RxDocumentData<RxDocType>[],\n        // can be overwritten for count-queries\n        public readonly count: number,\n    ) {\n        this.documents = mapDocumentsDataToCacheDocs<RxDocType, any>(this.collection._docCache, docsDataFromStorageInstance);\n    }\n\n\n    /**\n     * Instead of using the newResultData in the result cache,\n     * we directly use the objects that are stored in the RxDocument\n     * to ensure we do not store the same data twice and fill up the memory.\n     * @overwrites itself with the actual value\n     */\n    get docsData(): RxDocumentData<RxDocType>[] {\n        return overwriteGetterForCaching(\n            this,\n            'docsData',\n            this.documents.map(d => d._data)\n        );\n    }\n\n\n    // A key->document map, used in the event reduce optimization.\n    get docsDataMap(): Map<string, RxDocumentData<RxDocType>> {\n        const map = new Map<string, RxDocumentData<RxDocType>>();\n        this.documents.forEach(d => {\n            map.set(d.primary, d._data);\n        });\n        return overwriteGetterForCaching(\n            this,\n            'docsDataMap',\n            map\n        );\n    }\n\n    get docsMap(): Map<string, RxDocument<RxDocType>> {\n        const map = new Map<string, RxDocument<RxDocType>>();\n        const documents = this.documents;\n        for (let i = 0; i < documents.length; i++) {\n            const doc = documents[i];\n            map.set(doc.primary, doc);\n        }\n        return overwriteGetterForCaching(\n            this,\n            'docsMap',\n            map\n        );\n    }\n}\n"],"mappings":";;;;;;;;AAAA,IAAAA,SAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAOaE,mBAAmB,GAAAC,OAAA,CAAAD,mBAAA;EAC5B;AACJ;AACA;AACA;AACA;;EAGI,SAAAA,oBACoBE,UAAmC;EACnD;EACAC,2BAAwD;EACxD;EACgBC,KAAa,EAC/B;IAAA,KARcC,IAAI,GAAG,IAAAC,UAAG,EAAC,CAAC;IAAA,KAGRJ,UAAmC,GAAnCA,UAAmC;IAAA,KAInCE,KAAa,GAAbA,KAAa;IAE7B,IAAI,CAACG,SAAS,GAAG,IAAAC,qCAA2B,EAAiB,IAAI,CAACN,UAAU,CAACL,SAAS,EAAEM,2BAA2B,CAAC;EACxH;;EAGA;AACJ;AACA;AACA;AACA;AACA;EALI,WAAAM,aAAA,CAAAC,OAAA,EAAAV,mBAAA;IAAAW,GAAA;IAAAC,GAAA,EAMA,SAAAA,CAAA,EAA4C;MACxC,OAAO,IAAAC,gCAAyB,EAC5B,IAAI,EACJ,UAAU,EACV,IAAI,CAACN,SAAS,CAACO,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,KAAK,CACnC,CAAC;IACL;;IAGA;EAAA;IAAAL,GAAA;IAAAC,GAAA,EACA,SAAAA,CAAA,EAA0D;MACtD,IAAME,GAAG,GAAG,IAAIG,GAAG,CAAoC,CAAC;MACxD,IAAI,CAACV,SAAS,CAACW,OAAO,CAACH,CAAC,IAAI;QACxBD,GAAG,CAACK,GAAG,CAACJ,CAAC,CAACK,OAAO,EAAEL,CAAC,CAACC,KAAK,CAAC;MAC/B,CAAC,CAAC;MACF,OAAO,IAAAH,gCAAyB,EAC5B,IAAI,EACJ,aAAa,EACbC,GACJ,CAAC;IACL;EAAC;IAAAH,GAAA;IAAAC,GAAA,EAED,SAAAA,CAAA,EAAkD;MAC9C,IAAME,GAAG,GAAG,IAAIG,GAAG,CAAgC,CAAC;MACpD,IAAMV,SAAS,GAAG,IAAI,CAACA,SAAS;MAChC,KAAK,IAAIc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,SAAS,CAACe,MAAM,EAAED,CAAC,EAAE,EAAE;QACvC,IAAME,GAAG,GAAGhB,SAAS,CAACc,CAAC,CAAC;QACxBP,GAAG,CAACK,GAAG,CAACI,GAAG,CAACH,OAAO,EAAEG,GAAG,CAAC;MAC7B;MACA,OAAO,IAAAV,gCAAyB,EAC5B,IAAI,EACJ,SAAS,EACTC,GACJ,CAAC;IACL;EAAC;AAAA","ignoreList":[]}