{"version":3,"file":"cleanup.d.js","names":[],"sources":["../../../../src/types/plugins/cleanup.d.ts"],"sourcesContent":["export type RxCleanupPolicy = {\n    /**\n     * The minimum time in milliseconds\n     * of how long a document must have been deleted\n     * until it is purged by the cleanup.\n     * This should be higher then the time you expect\n     * your user to be offline for.\n     * If this is too low, deleted documents might not\n     * replicate their deletion state.\n     */\n    minimumDeletedTime: number;\n    /**\n     * The minimum amount of that that the RxCollection must have existed.\n     * This ensures that at the initial page load, more important\n     * tasks are not slowed down because a cleanup process is running.\n     */\n    minimumCollectionAge: number;\n    /**\n     * After the initial cleanup is done,\n     * a new cleanup is started after [runEach] milliseconds\n     */\n    runEach: number;\n    /**\n     * If set to true,\n     * RxDB will await all running replications\n     * to not have a replication cycle running.\n     * This ensures we do not remove deleted documents\n     * when they might not have already been replicated.\n     */\n    awaitReplicationsInSync: boolean;\n    /**\n     * If true, it will only start the cleanup\n     * when the current instance is also the leader.\n     * This ensures that when RxDB is used in multiInstance mode,\n     * only one instance will start the cleanup.\n     */\n    waitForLeadership: boolean;\n};\n"],"mappings":"","ignoreList":[]}