{"version":3,"file":"websocket-server.js","names":["_isomorphicWs","_interopRequireDefault","require","_index","_index2","_rxjs","WebSocketServer","pkg","startSocketServer","options","wss","closed","closeServer","PROMISE_RESOLVE_VOID","onConnection$","complete","Promise","res","rej","ws","clients","close","err","Subject","on","next","server","asObservable","REPLICATION_HANDLER_BY_COLLECTION","Map","getReplicationHandlerByCollection","database","collectionName","collections","Error","collection","handler","getFromMapOrCreate","rxStorageInstanceToReplicationHandler","storageInstance","conflictHandler","token","startWebsocketServer","wsOptions","serverState","onDestroy","push","subscribe","onCloseHandlers","onclose","map","fn","messageString","message","JSON","parse","method","changeStreamSub","masterChangeStream$","ev","streamResponse","id","result","send","stringify","unsubscribe","params","response"],"sources":["../../../../src/plugins/replication-websocket/websocket-server.ts"],"sourcesContent":["import type {\n    RxCollection,\n    RxDatabase,\n    RxReplicationHandler\n} from '../../types/index.d.ts';\n\nimport type {\n    WebSocket,\n    ServerOptions\n} from 'isomorphic-ws';\nimport pkg from 'isomorphic-ws';\nconst { WebSocketServer } = pkg;\n\nimport type {\n    WebsocketMessageResponseType,\n    WebsocketMessageType,\n    WebsocketServerOptions,\n    WebsocketServerState\n} from './websocket-types.ts';\nimport { rxStorageInstanceToReplicationHandler } from '../../replication-protocol/index.ts';\nimport {\n    PROMISE_RESOLVE_VOID, getFromMapOrCreate\n} from '../../plugins/utils/index.ts';\nimport { Subject } from 'rxjs';\n\nexport function startSocketServer(options: ServerOptions): WebsocketServerState {\n    const wss = new WebSocketServer(options);\n    let closed = false;\n    function closeServer() {\n        if (closed) {\n            return PROMISE_RESOLVE_VOID;\n        }\n        closed = true;\n        onConnection$.complete();\n        return new Promise<void>((res, rej) => {\n            /**\n             * We have to close all client connections,\n             * otherwise wss.close() will never call the callback.\n             * @link https://github.com/websockets/ws/issues/1288#issuecomment-360594458\n             */\n            for (const ws of wss.clients) {\n                ws.close();\n            }\n            wss.close((err: any) => {\n                if (err) {\n                    rej(err);\n                } else {\n                    res();\n                }\n            });\n        });\n    }\n\n    const onConnection$ = new Subject<WebSocket>();\n    wss.on('connection', (ws: any) => onConnection$.next(ws));\n\n    return {\n        server: wss,\n        close: closeServer,\n        onConnection$: onConnection$.asObservable()\n    };\n}\n\nconst REPLICATION_HANDLER_BY_COLLECTION: WeakMap<RxCollection, RxReplicationHandler<any, any>> = new Map();\nexport function getReplicationHandlerByCollection<RxDocType>(\n    database: RxDatabase<any>,\n    collectionName: string\n): RxReplicationHandler<RxDocType, any> {\n    if (!database.collections[collectionName]) {\n        throw new Error('collection ' + collectionName + ' does not exist');\n    }\n\n    const collection = database.collections[collectionName];\n    const handler = getFromMapOrCreate<RxCollection, RxReplicationHandler<RxDocType, any>>(\n        REPLICATION_HANDLER_BY_COLLECTION,\n        collection,\n        () => {\n            return rxStorageInstanceToReplicationHandler(\n                collection.storageInstance,\n                collection.conflictHandler,\n                database.token\n            );\n        }\n    );\n    return handler;\n}\n\nexport function startWebsocketServer(options: WebsocketServerOptions): WebsocketServerState {\n    const { database, ...wsOptions } = options;\n    const serverState = startSocketServer(wsOptions);\n\n    // auto close when the database gets destroyed\n    database.onDestroy.push(() => serverState.close());\n\n    serverState.onConnection$.subscribe(ws => {\n        const onCloseHandlers: Function[] = [];\n        ws.onclose = () => {\n            onCloseHandlers.map(fn => fn());\n        };\n        ws.on('message', async (messageString: string) => {\n            const message: WebsocketMessageType = JSON.parse(messageString);\n            const handler = getReplicationHandlerByCollection(database, message.collection);\n            if (message.method === 'auth') {\n                return;\n            }\n            const method = handler[message.method];\n\n            /**\n             * If it is not a function,\n             * it means that the client requested the masterChangeStream$\n             */\n            if (typeof method !== 'function') {\n                const changeStreamSub = handler.masterChangeStream$.subscribe(ev => {\n                    const streamResponse: WebsocketMessageResponseType = {\n                        id: 'stream',\n                        collection: message.collection,\n                        result: ev\n                    };\n                    ws.send(JSON.stringify(streamResponse));\n                });\n                onCloseHandlers.push(() => changeStreamSub.unsubscribe());\n                return;\n            }\n            const result = await (method as any)(...message.params);\n            const response: WebsocketMessageResponseType = {\n                id: message.id,\n                collection: message.collection,\n                result\n            };\n            ws.send(JSON.stringify(response));\n        });\n    });\n\n\n    return serverState;\n}\n"],"mappings":"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","ignoreList":[]}