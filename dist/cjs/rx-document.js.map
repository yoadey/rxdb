{"version":3,"file":"rx-document.js","names":["_operators","require","_index","_rxError","_hooks","_rxChangeEvent","_overwritable","_rxSchemaHelper","_rxStorageHelper","_incrementalWrite","basePrototype","exports","primaryPath","_this","isInstanceOfRxDocument","undefined","collection","schema","primary","_data","revision","_rev","deleted$","$","pipe","map","d","_deleted","deleted$$","reactivity","database","getReactivityFactory","fromObservable","getLatest","deleted","latestDocData","_docCache","getLatestDocumentData","getCachedRxDocument","filter","changeEvent","isLocal","documentId","getDocumentDataOfRxChangeEvent","startWith","distinctUntilChanged","prev","curr","docData","shareReplay","RXJS_SHARE_REPLAY_DEFAULTS","$$","get$","path","overwritable","isDevMode","includes","newRxError","finalFields","schemaObj","getSchemaByObjectPath","jsonSchema","data","getProperty","get$$","obs","get","populate","value","PROMISE_RESOLVE_NULL","ref","refCollection","collections","type","findByIds","exec","then","res","valuesIterator","values","Array","from","findOne","objPath","getFromMapOrCreate","_propertyCache","valueObj","isArray","deepFreezeWhenDevMode","proxy","Proxy","flatClone","target","property","lastChar","charAt","length","endsWith","key","slice","trimDots","toJSON","withMetaFields","_attachments","_meta","toMutableJSON","clone","update","_updateObj","pluginMissing","incrementalUpdate","updateCRDT","putAttachment","getAttachment","allAttachments","allAttachments$","modify","mutationFunction","_context","oldData","newData","modifierFromPublicToInternal","_saveData","incrementalModify","incrementalWriteQueue","addWrite","result","patch","Object","entries","forEach","k","v","incrementalPatch","id","document","beforeDocumentUpdateWrite","writeResult","storageInstance","bulkWrite","previous","isError","error","throwIfIsStorageWriteError","_runHooks","success","remove","Promise","reject","deletedData","removedDocData","removed","incrementalRemove","newDoc","destroy","createRxDocumentConstructor","proto","constructor","RxDocumentConstructor","Map","prototype","createWithConstructor","jsonData","doc","runPluginHooks","isRxDocument","obj","assign","validateChange"],"sources":["../../src/rx-document.ts"],"sourcesContent":["import {\n    Observable\n} from 'rxjs';\nimport {\n    distinctUntilChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith\n} from 'rxjs/operators';\nimport {\n    clone,\n    trimDots,\n    pluginMissing,\n    flatClone,\n    PROMISE_RESOLVE_NULL,\n    RXJS_SHARE_REPLAY_DEFAULTS,\n    getProperty,\n    getFromMapOrCreate\n} from './plugins/utils/index.ts';\nimport {\n    newRxError\n} from './rx-error.ts';\nimport {\n    runPluginHooks\n} from './hooks.ts';\n\nimport type {\n    RxDocument,\n    RxCollection,\n    RxDocumentData,\n    RxDocumentWriteData,\n    UpdateQuery,\n    CRDTEntry,\n    ModifyFunction\n} from './types/index.d.ts';\nimport { getDocumentDataOfRxChangeEvent } from './rx-change-event.ts';\nimport { overwritable } from './overwritable.ts';\nimport { getSchemaByObjectPath } from './rx-schema-helper.ts';\nimport { throwIfIsStorageWriteError } from './rx-storage-helper.ts';\nimport { modifierFromPublicToInternal } from './incremental-write.ts';\n\nexport const basePrototype = {\n    get primaryPath() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this.collection.schema.primaryPath;\n    },\n    get primary() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return (_this._data as any)[_this.primaryPath];\n    },\n    get revision() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._data._rev;\n    },\n    get deleted$() {\n        const _this: RxDocument<any> = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this.$.pipe(\n            map((d: any) => d._data._deleted)\n        );\n    },\n    get deleted$$() {\n        const _this: RxDocument = this as any;\n        const reactivity = _this.collection.database.getReactivityFactory();\n        return reactivity.fromObservable(\n            _this.deleted$,\n            _this.getLatest().deleted,\n            _this.collection.database\n        );\n    },\n    get deleted() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._data._deleted;\n    },\n\n    getLatest(this: RxDocument): RxDocument {\n        const latestDocData = this.collection._docCache.getLatestDocumentData(this.primary);\n        return this.collection._docCache.getCachedRxDocument(latestDocData);\n    },\n\n    /**\n     * returns the observable which emits the plain-data of this document\n     */\n    get $(): Observable<RxDocumentData<any>> {\n        const _this: RxDocument<{}, {}, {}> = this as any;\n        return _this.collection.$.pipe(\n            filter(changeEvent => !changeEvent.isLocal),\n            filter(changeEvent => changeEvent.documentId === this.primary),\n            map(changeEvent => getDocumentDataOfRxChangeEvent(changeEvent)),\n            startWith(_this.collection._docCache.getLatestDocumentData(this.primary)),\n            distinctUntilChanged((prev, curr) => prev._rev === curr._rev),\n            map(docData => (this as RxDocument<any>).collection._docCache.getCachedRxDocument(docData)),\n            shareReplay(RXJS_SHARE_REPLAY_DEFAULTS)\n        );\n    },\n    get $$(): any {\n        const _this: RxDocument = this as any;\n        const reactivity = _this.collection.database.getReactivityFactory();\n        return reactivity.fromObservable(\n            _this.$,\n            _this.getLatest()._data,\n            _this.collection.database\n        );\n    },\n\n    /**\n     * returns observable of the value of the given path\n     */\n    get$(this: RxDocument, path: string): Observable<any> {\n        if (overwritable.isDevMode()) {\n            if (path.includes('.item.')) {\n                throw newRxError('DOC1', {\n                    path\n                });\n            }\n\n            if (path === this.primaryPath) {\n                throw newRxError('DOC2');\n            }\n\n            // final fields cannot be modified and so also not observed\n            if (this.collection.schema.finalFields.includes(path)) {\n                throw newRxError('DOC3', {\n                    path\n                });\n            }\n\n            const schemaObj = getSchemaByObjectPath(\n                this.collection.schema.jsonSchema,\n                path\n            );\n\n            if (!schemaObj) {\n                throw newRxError('DOC4', {\n                    path\n                });\n            }\n        }\n\n        return this.$\n            .pipe(\n                map(data => getProperty(data, path)),\n                distinctUntilChanged()\n            );\n    },\n    get$$(this: RxDocument, path: string) {\n        const obs = this.get$(path);\n        const reactivity = this.collection.database.getReactivityFactory();\n        return reactivity.fromObservable(\n            obs,\n            this.getLatest().get(path),\n            this.collection.database\n        );\n    },\n\n    /**\n     * populate the given path\n     */\n    populate(this: RxDocument, path: string): Promise<RxDocument | null> {\n        const schemaObj = getSchemaByObjectPath(\n            this.collection.schema.jsonSchema,\n            path\n        );\n        const value = this.get(path);\n        if (!value) {\n            return PROMISE_RESOLVE_NULL;\n        }\n        if (!schemaObj) {\n            throw newRxError('DOC5', {\n                path\n            });\n        }\n        if (!schemaObj.ref) {\n            throw newRxError('DOC6', {\n                path,\n                schemaObj\n            });\n        }\n\n        const refCollection: RxCollection = this.collection.database.collections[schemaObj.ref];\n        if (!refCollection) {\n            throw newRxError('DOC7', {\n                ref: schemaObj.ref,\n                path,\n                schemaObj\n            });\n        }\n\n        if (schemaObj.type === 'array') {\n            return refCollection.findByIds(value).exec().then(res => {\n                const valuesIterator = res.values();\n                return Array.from(valuesIterator) as any;\n            });\n        } else {\n            return refCollection.findOne(value).exec();\n        }\n    },\n    /**\n     * get data by objectPath\n     * @hotPath Performance here is really important,\n     * run some tests before changing anything.\n     */\n    get(this: RxDocument, objPath: string): any | null {\n        return getFromMapOrCreate(\n            this._propertyCache,\n            objPath,\n            () => {\n                const valueObj = getProperty(this._data, objPath);\n\n                // direct return if array or non-object\n                if (\n                    typeof valueObj !== 'object' ||\n                    valueObj === null ||\n                    Array.isArray(valueObj)\n                ) {\n                    return overwritable.deepFreezeWhenDevMode(valueObj);\n                }\n                const _this = this;\n                const proxy = new Proxy(\n                    /**\n                     * In dev-mode, the _data is deep-frozen\n                     * so we have to flat clone here so that\n                     * the proxy can work.\n                     */\n                    flatClone(valueObj),\n                    {\n                        get(target, property: any) {\n                            if (typeof property !== 'string') {\n                                return target[property];\n                            }\n                            const lastChar = property.charAt(property.length - 1);\n                            if (property.endsWith('$$')) {\n                                const key = property.slice(0, -2);\n                                return _this.get$$(trimDots(objPath + '.' + key));\n                            } else if (lastChar === '$') {\n                                const key = property.slice(0, -1);\n                                return _this.get$(trimDots(objPath + '.' + key));\n                            } else if (lastChar === '_') {\n                                const key = property.slice(0, -1);\n                                return _this.populate(trimDots(objPath + '.' + key));\n                            } else {\n                                return _this.get(trimDots(objPath + '.' + property));\n                            }\n                        }\n                    });\n                return proxy;\n            }\n        );\n\n    },\n\n    toJSON(this: RxDocument, withMetaFields = false) {\n        if (!withMetaFields) {\n            const data = flatClone(this._data);\n            delete (data as any)._rev;\n            delete (data as any)._attachments;\n            delete (data as any)._deleted;\n            delete (data as any)._meta;\n            return overwritable.deepFreezeWhenDevMode(data);\n        } else {\n            return overwritable.deepFreezeWhenDevMode(this._data);\n        }\n    },\n    toMutableJSON(this: RxDocument, withMetaFields = false) {\n        return clone(this.toJSON(withMetaFields as any));\n    },\n\n    /**\n     * updates document\n     * @overwritten by plugin (optional)\n     * @param updateObj mongodb-like syntax\n     */\n    update(_updateObj: UpdateQuery<any>) {\n        throw pluginMissing('update');\n    },\n    incrementalUpdate(_updateObj: UpdateQuery<any>) {\n        throw pluginMissing('update');\n    },\n    updateCRDT(_updateObj: CRDTEntry<any> | CRDTEntry<any>[]) {\n        throw pluginMissing('crdt');\n    },\n    putAttachment() {\n        throw pluginMissing('attachments');\n    },\n    getAttachment() {\n        throw pluginMissing('attachments');\n    },\n    allAttachments() {\n        throw pluginMissing('attachments');\n    },\n    get allAttachments$() {\n        throw pluginMissing('attachments');\n    },\n\n    async modify<RxDocType>(\n        this: RxDocument<RxDocType>,\n        mutationFunction: ModifyFunction<RxDocType>,\n        // used by some plugins that wrap the method\n        _context?: string\n    ): Promise<RxDocument> {\n        const oldData = this._data;\n        const newData: RxDocumentData<RxDocType> = await modifierFromPublicToInternal<RxDocType>(mutationFunction)(oldData) as any;\n        return this._saveData(newData, oldData) as any;\n    },\n\n    /**\n     * runs an incremental update over the document\n     * @param function that takes the document-data and returns a new data-object\n     */\n    incrementalModify(\n        this: RxDocument,\n        mutationFunction: ModifyFunction<any>,\n        // used by some plugins that wrap the method\n        _context?: string\n    ): Promise<RxDocument> {\n        return this.collection.incrementalWriteQueue.addWrite(\n            this._data,\n            modifierFromPublicToInternal(mutationFunction)\n        ).then(result => this.collection._docCache.getCachedRxDocument(result));\n    },\n\n    patch<RxDocType>(\n        this: RxDocument<RxDocType>,\n        patch: Partial<RxDocType>\n    ) {\n        const oldData = this._data;\n        const newData = clone(oldData);\n        Object\n            .entries(patch)\n            .forEach(([k, v]) => {\n                (newData as any)[k] = v;\n            });\n        return this._saveData(newData, oldData);\n    },\n\n    /**\n     * patches the given properties\n     */\n    incrementalPatch<RxDocumentType = any>(\n        this: RxDocument<RxDocumentType>,\n        patch: Partial<RxDocumentType>\n    ): Promise<RxDocument<RxDocumentType>> {\n        return this.incrementalModify((docData) => {\n            Object\n                .entries(patch)\n                .forEach(([k, v]) => {\n                    (docData as any)[k] = v;\n                });\n            return docData;\n        });\n    },\n\n    /**\n     * saves the new document-data\n     * and handles the events\n     */\n    async _saveData<RxDocType>(\n        this: RxDocument<RxDocType>,\n        newData: RxDocumentWriteData<RxDocType>,\n        oldData: RxDocumentData<RxDocType>\n    ): Promise<RxDocument<RxDocType>> {\n        newData = flatClone(newData);\n\n        // deleted documents cannot be changed\n        if (this._data._deleted) {\n            throw newRxError('DOC11', {\n                id: this.primary,\n                document: this\n            });\n        }\n        await beforeDocumentUpdateWrite(this.collection, newData, oldData);\n        const writeResult = await this.collection.storageInstance.bulkWrite([{\n            previous: oldData,\n            document: newData\n        }], 'rx-document-save-data');\n\n        const isError = writeResult.error[0];\n        throwIfIsStorageWriteError(this.collection, this.primary, newData, isError);\n\n        await this.collection._runHooks('post', 'save', newData, this);\n        return this.collection._docCache.getCachedRxDocument(\n            writeResult.success[0]\n        );\n    },\n\n    /**\n     * Remove the document.\n     * Notice that there is no hard delete,\n     * instead deleted documents get flagged with _deleted=true.\n     */\n    remove(this: RxDocument): Promise<RxDocument> {\n        const collection = this.collection;\n        if (this.deleted) {\n            return Promise.reject(newRxError('DOC13', {\n                document: this,\n                id: this.primary\n            }));\n        }\n\n        const deletedData = flatClone(this._data);\n        let removedDocData: RxDocumentData<any>;\n        return collection._runHooks('pre', 'remove', deletedData, this)\n            .then(async () => {\n                deletedData._deleted = true;\n                const writeResult = await collection.storageInstance.bulkWrite([{\n                    previous: this._data,\n                    document: deletedData\n                }], 'rx-document-remove');\n                const isError = writeResult.error[0];\n                throwIfIsStorageWriteError(collection, this.primary, deletedData, isError);\n                return writeResult.success[0];\n            })\n            .then((removed) => {\n                removedDocData = removed;\n                return this.collection._runHooks('post', 'remove', deletedData, this);\n            })\n            .then(() => {\n                return this.collection._docCache.getCachedRxDocument(removedDocData);\n            });\n    },\n    incrementalRemove(this: RxDocument): Promise<RxDocument> {\n        return this.incrementalModify(async (docData) => {\n            await this.collection._runHooks('pre', 'remove', docData, this);\n            docData._deleted = true;\n            return docData;\n        }).then(async (newDoc) => {\n            await this.collection._runHooks('post', 'remove', newDoc._data, newDoc);\n            return newDoc;\n        });\n    },\n    destroy() {\n        throw newRxError('DOC14');\n    }\n};\n\nexport function createRxDocumentConstructor(proto = basePrototype) {\n    const constructor = function RxDocumentConstructor(\n        this: RxDocument,\n        collection: RxCollection,\n        docData: RxDocumentData<any>\n    ) {\n        this.collection = collection;\n\n        // assume that this is always equal to the doc-data in the database\n        this._data = docData;\n        this._propertyCache = new Map<string, any>();\n\n        /**\n         * because of the prototype-merge,\n         * we can not use the native instanceof operator\n         */\n        this.isInstanceOfRxDocument = true;\n    };\n    constructor.prototype = proto;\n    return constructor;\n}\n\nexport function createWithConstructor<RxDocType>(\n    constructor: any,\n    collection: RxCollection<RxDocType>,\n    jsonData: RxDocumentData<RxDocType>\n): RxDocument<RxDocType> | null {\n    const doc = new constructor(collection, jsonData);\n    runPluginHooks('createRxDocument', doc);\n    return doc;\n}\n\nexport function isRxDocument(obj: any): boolean {\n    return typeof obj === 'object' && obj !== null && 'isInstanceOfRxDocument' in obj;\n}\n\n\nexport function beforeDocumentUpdateWrite<RxDocType>(\n    collection: RxCollection<RxDocType>,\n    newData: RxDocumentWriteData<RxDocType>,\n    oldData: RxDocumentData<RxDocType>\n): Promise<any> {\n    /**\n     * Meta values must always be merged\n     * instead of overwritten.\n     * This ensures that different plugins do not overwrite\n     * each others meta properties.\n     */\n    newData._meta = Object.assign(\n        {},\n        oldData._meta,\n        newData._meta\n    );\n\n    // ensure modifications are ok\n    if (overwritable.isDevMode()) {\n        collection.schema.validateChange(oldData, newData);\n    }\n    return collection._runHooks('pre', 'save', newData, oldData);\n}\n\n"],"mappings":"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","ignoreList":[]}