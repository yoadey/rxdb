{"version":3,"file":"rx-storage-ipc-main.js","names":["Subject","IPC_RENDERER_KEY_PREFIX","exposeRxStorageRemote","exposeIpcMainRxStorage","args","channelId","key","join","messages$","openRenderers","Set","ipcMain","on","event","message","addOpenRenderer","sender","next","renderer","has","add","delete","send","msg","forEach","storage"],"sources":["../../../../src/plugins/electron/rx-storage-ipc-main.ts"],"sourcesContent":["/**\n * This file contains everything\n * that is supposed to run inside of the electron main process\n */\nimport type {\n    RxStorage\n} from '../../types/index.d.ts';\nimport { Subject } from 'rxjs';\nimport {\n    IPC_RENDERER_KEY_PREFIX\n} from './electron-helper.ts';\nimport {\n    exposeRxStorageRemote,\n    RxStorageRemoteExposeSettings,\n    MessageToRemote\n} from '../storage-remote/index.ts';\nexport function exposeIpcMainRxStorage<T, D>(\n    args: {\n        key: string;\n        storage: RxStorage<T, D>;\n        ipcMain: any;\n    }\n) {\n    const channelId = [\n        IPC_RENDERER_KEY_PREFIX,\n        args.key,\n    ].join('|');\n    const messages$ = new Subject<MessageToRemote>();\n    const openRenderers: Set<any> = new Set();\n    args.ipcMain.on(\n        channelId,\n        (event: any, message: any) => {\n            addOpenRenderer(event.sender);\n            if (message) {\n                messages$.next(message);\n            }\n        }\n    );\n    const addOpenRenderer = (renderer: any) => {\n        if (openRenderers.has(renderer)) return;\n        openRenderers.add(renderer);\n        renderer.on('destroyed', () => openRenderers.delete(renderer));\n    };\n    const send: RxStorageRemoteExposeSettings['send'] = (msg) => {\n        /**\n         * TODO we could improve performance\n         * by only sending the message to the 'correct' sender.\n         */\n        openRenderers.forEach(sender => {\n            sender.send(channelId, msg);\n        });\n    };\n    exposeRxStorageRemote({\n        storage: args.storage,\n        messages$,\n        send\n    });\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAIA,SAASA,OAAO,QAAQ,MAAM;AAC9B,SACIC,uBAAuB,QACpB,sBAAsB;AAC7B,SACIC,qBAAqB,QAGlB,4BAA4B;AACnC,OAAO,SAASC,sBAAsBA,CAClCC,IAIC,EACH;EACE,IAAMC,SAAS,GAAG,CACdJ,uBAAuB,EACvBG,IAAI,CAACE,GAAG,CACX,CAACC,IAAI,CAAC,GAAG,CAAC;EACX,IAAMC,SAAS,GAAG,IAAIR,OAAO,CAAkB,CAAC;EAChD,IAAMS,aAAuB,GAAG,IAAIC,GAAG,CAAC,CAAC;EACzCN,IAAI,CAACO,OAAO,CAACC,EAAE,CACXP,SAAS,EACT,CAACQ,KAAU,EAAEC,OAAY,KAAK;IAC1BC,eAAe,CAACF,KAAK,CAACG,MAAM,CAAC;IAC7B,IAAIF,OAAO,EAAE;MACTN,SAAS,CAACS,IAAI,CAACH,OAAO,CAAC;IAC3B;EACJ,CACJ,CAAC;EACD,IAAMC,eAAe,GAAIG,QAAa,IAAK;IACvC,IAAIT,aAAa,CAACU,GAAG,CAACD,QAAQ,CAAC,EAAE;IACjCT,aAAa,CAACW,GAAG,CAACF,QAAQ,CAAC;IAC3BA,QAAQ,CAACN,EAAE,CAAC,WAAW,EAAE,MAAMH,aAAa,CAACY,MAAM,CAACH,QAAQ,CAAC,CAAC;EAClE,CAAC;EACD,IAAMI,IAA2C,GAAIC,GAAG,IAAK;IACzD;AACR;AACA;AACA;IACQd,aAAa,CAACe,OAAO,CAACR,MAAM,IAAI;MAC5BA,MAAM,CAACM,IAAI,CAACjB,SAAS,EAAEkB,GAAG,CAAC;IAC/B,CAAC,CAAC;EACN,CAAC;EACDrB,qBAAqB,CAAC;IAClBuB,OAAO,EAAErB,IAAI,CAACqB,OAAO;IACrBjB,SAAS;IACTc;EACJ,CAAC,CAAC;AACN","ignoreList":[]}