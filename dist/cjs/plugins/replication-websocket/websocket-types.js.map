{"version":3,"file":"websocket-types.js","names":[],"sources":["../../../../src/plugins/replication-websocket/websocket-types.ts"],"sourcesContent":["import type {\n    Observable,\n} from 'rxjs';\nimport type {\n    ServerOptions,\n    ClientOptions,\n    WebSocketServer,\n    WebSocket\n} from 'ws';\nimport type {\n    RxCollection,\n    RxDatabase,\n    RxReplicationHandler,\n    StringKeys\n} from '../../types/index.d.ts';\n\nexport type WebsocketServerOptions = {\n    database: RxDatabase<any, any, any>;\n} & ServerOptions;\n\nexport type WebsocketServerState = {\n    server: WebSocketServer;\n    close: () => Promise<void>;\n    onConnection$: Observable<WebSocket>;\n};\n\nexport type WebsocketClientOptions<RxDocType> = {\n    replicationIdentifier: string;\n    collection: RxCollection<RxDocType>;\n    url: string;\n    batchSize?: number;\n    live?: boolean;\n    headers?: { [k: string]: string; };\n} & ClientOptions;\n\nexport type WebsocketMessageType = {\n    id: string;\n    collection: string;\n    method: StringKeys<RxReplicationHandler<any, any>> | 'auth';\n    params: any[];\n};\n\nexport type WebsocketMessageResponseType = {\n    id: string;\n    collection: string;\n    result: any;\n};\n"],"mappings":"","ignoreList":[]}