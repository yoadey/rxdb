{"version":3,"file":"utils-time.js","names":["_lastNow","now","ret","Date","twoDecimals","parseFloat","toFixed"],"sources":["../../../../src/plugins/utils/utils-time.ts"],"sourcesContent":["\n/**\n * Returns the current unix time in milliseconds (with two decimals!)\n * Because the accuracy of getTime() in javascript is bad,\n * and we cannot rely on performance.now() on all platforms,\n * this method implements a way to never return the same value twice.\n * This ensures that when now() is called often, we do not loose the information\n * about which call came first and which came after.\n *\n * We had to move from having no decimals, to having two decimal\n * because it turned out that some storages are such fast that\n * calling this method too often would return 'the future'.\n */\nlet _lastNow: number = 0;\n/**\n * Returns the current time in milliseconds,\n * also ensures to not return the same value twice.\n */\nexport function now(): number {\n    let ret = Date.now();\n    ret = ret + 0.01;\n    if (ret <= _lastNow) {\n        ret = _lastNow + 0.01;\n    }\n\n    /**\n     * Strip the returned number to max two decimals.\n     * In theory we would not need this but\n     * in practice JavaScript has no such good number precision\n     * so rounding errors could add another decimal place.\n     */\n    const twoDecimals = parseFloat(ret.toFixed(2));\n\n    _lastNow = twoDecimals;\n    return twoDecimals;\n}\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,QAAgB,GAAG,CAAC;AACxB;AACA;AACA;AACA;AACA,OAAO,SAASC,GAAGA,CAAA,EAAW;EAC1B,IAAIC,GAAG,GAAGC,IAAI,CAACF,GAAG,CAAC,CAAC;EACpBC,GAAG,GAAGA,GAAG,GAAG,IAAI;EAChB,IAAIA,GAAG,IAAIF,QAAQ,EAAE;IACjBE,GAAG,GAAGF,QAAQ,GAAG,IAAI;EACzB;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAMI,WAAW,GAAGC,UAAU,CAACH,GAAG,CAACI,OAAO,CAAC,CAAC,CAAC,CAAC;EAE9CN,QAAQ,GAAGI,WAAW;EACtB,OAAOA,WAAW;AACtB","ignoreList":[]}