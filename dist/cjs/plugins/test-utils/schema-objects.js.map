{"version":3,"file":"schema-objects.js","names":["_faker","require","_asyncTestUtil","schemas","_interopRequireWildcard","_index","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","TEST_DATA_CHARSET","exports","TEST_DATA_CHARSET_LAST_SORTED","ensureNotFalsy","lastOfArray","split","sort","randomStringWithSpecialChars","length","randomString","humanData","passportId","age","randomNumber","firstName","faker","person","lastName","simpleHumanData","simpleHumanV3Data","partial","defaultObj","assign","simpleHumanAge","humanWithSubOther","other","NoIndexHuman","nestedHumanData","mainSkill","name","level","deepNestedHumanData","attack","good","count","bigHumanDocumentType","dnaHash","heroArrayData","skills","Array","fill","map","damage","simpleHeroArray","encryptedHumanData","secret","encryptedObjectHumanData","subname","encryptedDeepHumanDocumentType","firstLevelPassword","secretData","pw","deepSecret","darkhole","nestedSecret","compoundIndexData","passportCountry","compoundIndexNoStringData","nostringIndex","refHumanData","bestFriend","refHumanNestedData","foo","humanWithTimestampData","givenData","ret","id","updatedAt","Date","now","averageSchemaForFieldLength","averageSchema","averageSchemaData","properties","maxLength","var1","var2","maximum","deep","deep1","deep2","deeper","deepNr","list","pointData","x","number","int","y","humanWithIdAndAgeIndexDocumentType","humanWithCompositePrimary","info"],"sources":["../../../../src/plugins/test-utils/schema-objects.ts"],"sourcesContent":["/**\n * this file contains objects which match the schemas in schemas.js\n */\n\nimport { faker } from '@faker-js/faker';\n\nimport {\n    randomNumber,\n    randomString\n} from 'async-test-util';\nimport { HumanDocumentType } from './schemas.ts';\nimport * as schemas from './schemas.ts';\nimport { ensureNotFalsy, lastOfArray } from '../utils/index.ts';\n\n/**\n * Some storages had problems with umlauts and other special chars.\n * So we add these to all test strings.\n * TODO add emojis\n */\nexport const TEST_DATA_CHARSET = '0987654321ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz√§√∂√º√ñ√Ñ√ü√ú[]{}\\'';\nexport const TEST_DATA_CHARSET_LAST_SORTED = ensureNotFalsy(lastOfArray(TEST_DATA_CHARSET.split('').sort()));\n// const someEmojis = 'üòäüí©üëµüçå';\nexport function randomStringWithSpecialChars(length: number) {\n    return randomString(length, TEST_DATA_CHARSET);\n}\n\n\nexport interface SimpleHumanDocumentType {\n    passportId: string;\n    firstName: string;\n    lastName: string;\n}\n\nexport function humanData(\n    passportId: string = randomStringWithSpecialChars(12),\n    age: number = randomNumber(10, 50),\n    firstName: string = faker.person.firstName()\n): HumanDocumentType {\n    return {\n        passportId: passportId,\n        firstName,\n        lastName: faker.person.lastName(),\n        age\n    };\n}\n\nexport function simpleHumanData(): SimpleHumanDocumentType {\n    return {\n        passportId: randomStringWithSpecialChars(12),\n        firstName: faker.person.firstName(),\n        lastName: faker.person.lastName()\n    };\n}\n\nexport interface SimpleHumanV3DocumentType {\n    passportId: string;\n    age: number;\n    oneOptional?: string;\n}\nexport function simpleHumanV3Data(partial: Partial<SimpleHumanV3DocumentType> = {}): SimpleHumanV3DocumentType {\n    const defaultObj = {\n        passportId: randomStringWithSpecialChars(12),\n        age: randomNumber(10, 50)\n    };\n    return Object.assign(\n        defaultObj,\n        partial\n    );\n}\n\nexport interface SimpleHumanAgeDocumentType {\n    passportId: string;\n    age: string;\n}\nexport function simpleHumanAge(partial: Partial<SimpleHumanAgeDocumentType> = {}): SimpleHumanAgeDocumentType {\n    const defaultObj = {\n        passportId: randomStringWithSpecialChars(12),\n        age: randomNumber(10, 50) + ''\n    };\n    return Object.assign(\n        defaultObj,\n        partial\n    );\n}\n\nexport interface HumanWithSubOtherDocumentType {\n    passportId: string;\n    other: {\n        age: number;\n    };\n}\nexport function humanWithSubOther(): HumanWithSubOtherDocumentType {\n    return {\n        passportId: randomStringWithSpecialChars(12),\n        other: {\n            age: randomNumber(10, 50)\n        }\n    };\n}\n\nexport interface NoIndexHumanDocumentType {\n    firstName: string;\n    lastName: string;\n}\nexport function NoIndexHuman(): NoIndexHumanDocumentType {\n    return {\n        firstName: faker.person.firstName(),\n        lastName: faker.person.lastName()\n    };\n}\n\nexport interface NestedHumanDocumentType {\n    passportId: string;\n    firstName: string;\n    mainSkill: {\n        name: string;\n        level: number;\n    };\n}\nexport function nestedHumanData(partial: Partial<NestedHumanDocumentType> = {}): NestedHumanDocumentType {\n    const defaultObj = {\n        passportId: randomStringWithSpecialChars(12),\n        firstName: faker.person.firstName(),\n        mainSkill: {\n            name: randomStringWithSpecialChars(6),\n            level: 5\n        }\n    };\n    return Object.assign(\n        defaultObj,\n        partial\n    );\n}\n\nexport interface DeepNestedHumanDocumentType {\n    passportId: string;\n    mainSkill: {\n        name: string;\n        attack: {\n            good: boolean;\n            count: number;\n        };\n    };\n}\nexport function deepNestedHumanData(): DeepNestedHumanDocumentType {\n    return {\n        passportId: randomStringWithSpecialChars(12),\n        mainSkill: {\n            name: randomStringWithSpecialChars(6),\n            attack: {\n                good: false,\n                count: 5\n            }\n        }\n    };\n}\n\nexport interface BigHumanDocumentType {\n    passportId: string;\n    dnaHash: string;\n    firstName: string;\n    lastName: string;\n    age: number;\n}\nexport function bigHumanDocumentType(): BigHumanDocumentType {\n    return {\n        passportId: randomStringWithSpecialChars(12),\n        dnaHash: randomStringWithSpecialChars(12),\n        firstName: faker.person.firstName(),\n        lastName: faker.person.lastName(),\n        age: randomNumber(10, 50)\n    };\n}\n\nexport interface HeroArrayDocumentType {\n    name: string;\n    skills: {\n        name: string;\n        damage: number;\n    }[];\n}\nexport function heroArrayData(): HeroArrayDocumentType {\n    return {\n        name: randomStringWithSpecialChars(6),\n        skills: new Array(3).fill(0).map(() => {\n            return {\n                name: randomStringWithSpecialChars(6),\n                damage: randomNumber(10, 50)\n            };\n        })\n    };\n}\n\nexport interface SimpleHeroArrayDocumentType {\n    name: string;\n    skills: string[];\n}\nexport function simpleHeroArray(partial: Partial<SimpleHeroArrayDocumentType> = {}): SimpleHeroArrayDocumentType {\n    const defaultObj = {\n        name: randomStringWithSpecialChars(6),\n        skills: new Array(3).fill(0).map(() => randomStringWithSpecialChars(6))\n    };\n    return Object.assign(\n        defaultObj,\n        partial\n    );\n}\n\nexport interface EncryptedHumanDocumentType {\n    passportId: string;\n    firstName: string;\n    secret: string;\n}\nexport function encryptedHumanData(secret = randomStringWithSpecialChars(12)): EncryptedHumanDocumentType {\n    return {\n        passportId: randomStringWithSpecialChars(12),\n        firstName: faker.person.firstName(),\n        secret\n    };\n}\n\nexport interface EncryptedObjectHumanDocumentType {\n    passportId: string;\n    firstName: string;\n    secret: {\n        name: string;\n        subname: string;\n    };\n}\nexport function encryptedObjectHumanData(): EncryptedObjectHumanDocumentType {\n    return {\n        passportId: randomStringWithSpecialChars(12),\n        firstName: faker.person.firstName(),\n        secret: {\n            name: randomStringWithSpecialChars(12),\n            subname: randomStringWithSpecialChars(12)\n        }\n    };\n}\n\nexport interface EncryptedDeepHumanDocumentType {\n    passportId: string;\n    firstName: string;\n    firstLevelPassword: string;\n    secretData: {\n        pw: string;\n    };\n    deepSecret: {\n        darkhole: {\n            pw: string;\n        };\n    };\n    nestedSecret: {\n        darkhole: {\n            pw: string;\n        };\n    };\n}\nexport function encryptedDeepHumanDocumentType(): EncryptedDeepHumanDocumentType {\n    return {\n        passportId: randomStringWithSpecialChars(12),\n        firstName: faker.person.firstName(),\n        firstLevelPassword: randomStringWithSpecialChars(12),\n        secretData: {\n            pw: randomStringWithSpecialChars(12)\n        },\n        deepSecret: {\n            darkhole: {\n                pw: randomStringWithSpecialChars(12)\n            }\n        },\n        nestedSecret: {\n            darkhole: {\n                pw: randomStringWithSpecialChars(12)\n            }\n        }\n    };\n}\n\nexport interface CompoundIndexDocumentType {\n    passportId: string;\n    passportCountry: string;\n    age: number;\n}\nexport function compoundIndexData(): CompoundIndexDocumentType {\n    return {\n        passportId: randomStringWithSpecialChars(12),\n        passportCountry: randomStringWithSpecialChars(12),\n        age: randomNumber(10, 50)\n    };\n}\n\nexport interface CompoundIndexNoStringDocumentType {\n    passportId: string;\n    passportCountry: { [prop: string]: string; };\n    age: number;\n}\nexport function compoundIndexNoStringData(): CompoundIndexNoStringDocumentType {\n    return {\n        passportId: randomStringWithSpecialChars(12),\n        passportCountry: { [randomStringWithSpecialChars(12)]: randomStringWithSpecialChars(12) },\n        age: randomNumber(10, 50)\n    };\n}\n\nexport interface NostringIndexDocumentType {\n    passportId: {};\n    firstName: string;\n}\nexport function nostringIndex(): NostringIndexDocumentType {\n    return {\n        passportId: {},\n        firstName: faker.person.firstName()\n    };\n}\n\nexport interface RefHumanDocumentType {\n    name: string;\n    bestFriend: string;\n}\nexport function refHumanData(bestFriend?: string): RefHumanDocumentType {\n    return {\n        name: randomStringWithSpecialChars(12),\n        bestFriend\n    } as any;\n}\n\nexport interface RefHumanNestedDocumentType {\n    name: string;\n    foo: {\n        bestFriend: string;\n    };\n}\nexport function refHumanNestedData(bestFriend?: string): RefHumanNestedDocumentType {\n    return {\n        name: randomStringWithSpecialChars(12),\n        foo: {\n            bestFriend\n        } as any\n    };\n}\n\nexport interface HumanWithTimestampDocumentType {\n    id: string;\n    name: string;\n    age: number;\n    updatedAt: number;\n    deletedAt?: number;\n}\nexport function humanWithTimestampData(givenData: Partial<HumanWithTimestampDocumentType> = {}): HumanWithTimestampDocumentType {\n    let ret = {\n        id: randomStringWithSpecialChars(12),\n        name: faker.person.firstName(),\n        age: randomNumber(1, 100),\n        // use some time in the past week\n        updatedAt: Date.now()\n    };\n    ret = Object.assign({}, ret, givenData);\n    return ret;\n}\n\nexport interface AverageSchemaDocumentType {\n    id: string;\n    var1: string;\n    var2: number;\n    deep: {\n        deep1: string;\n        deep2: string;\n        deeper: {\n            deepNr: number;\n        };\n    };\n    list: {\n        deep1: string;\n        deep2: string;\n    }[];\n}\n\n\nconst averageSchemaForFieldLength = schemas.averageSchema() as any;\nexport function averageSchemaData(\n    partial: Partial<AverageSchemaDocumentType> = {}\n): AverageSchemaDocumentType {\n    return Object.assign(\n        {},\n        {\n            id: randomStringWithSpecialChars(ensureNotFalsy(averageSchemaForFieldLength.properties.id.maxLength)),\n            var1: randomStringWithSpecialChars(ensureNotFalsy(averageSchemaForFieldLength.properties.var1.maxLength)),\n            var2: randomNumber(100, ensureNotFalsy(averageSchemaForFieldLength.properties.var2.maximum)),\n            deep: {\n                deep1: randomStringWithSpecialChars(ensureNotFalsy(averageSchemaForFieldLength.properties.deep.properties.deep1.maxLength)),\n                deep2: randomStringWithSpecialChars(ensureNotFalsy(averageSchemaForFieldLength.properties.deep.properties.deep2.maxLength)),\n                deeper: {\n                    deepNr: randomNumber(0, 10)\n                }\n            },\n            list: new Array(5).fill(0).map(() => ({\n                deep1: randomStringWithSpecialChars(5),\n                deep2: randomStringWithSpecialChars(8)\n            }))\n        },\n        partial\n    );\n}\n\nexport interface PointDocumentType {\n    id: string;\n    x: number;\n    y: number;\n}\nexport function pointData(): PointDocumentType {\n    return {\n        id: randomStringWithSpecialChars(12),\n        x: faker.number.int(),\n        y: faker.number.int()\n    };\n}\n\nexport interface HumanWithIdAndAgeIndexDocumentType {\n    id: string;\n    name: string;\n    age: number;\n}\nexport function humanWithIdAndAgeIndexDocumentType(\n    age: number = randomNumber(1, 100)\n): HumanWithIdAndAgeIndexDocumentType {\n    return {\n        id: randomStringWithSpecialChars(12),\n        name: faker.person.firstName(),\n        age\n    };\n}\n\nexport type HumanWithCompositePrimary = {\n    // optional because it might be created by RxDB and not known before\n    id?: string;\n    firstName: string;\n    lastName: string;\n    info: {\n        age: number;\n    };\n};\nexport function humanWithCompositePrimary(partial: Partial<HumanWithCompositePrimary> = {}): HumanWithCompositePrimary {\n    const defaultObj = {\n        firstName: faker.person.firstName(),\n        lastName: faker.person.lastName(),\n        info: {\n            age: randomNumber(10, 50)\n        }\n    };\n    return Object.assign(\n        defaultObj,\n        partial\n    );\n}\n"],"mappings":"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","ignoreList":[]}