{"version":3,"file":"schemas.js","names":["AsyncTestUtil","overwritable","toTypedRxJsonSchema","flatClone","humanSchemaLiteral","deepFreezeWhenDevMode","title","description","version","keyCompression","primaryKey","type","properties","passportId","maxLength","firstName","lastName","age","minimum","maximum","multipleOf","required","indexes","humanSchemaTyped","human","humanDefault","default","humanFinal","final","simpleHuman","oneOptional","simpleHumanV3","humanAgeIndex","humanSubIndex","other","humanWithAllIndex","nestedHuman","mainSkill","name","level","additionalProperties","deepNestedHuman","attack","good","count","noIndexHuman","noStringIndex","bigHuman","dnaHash","encryptedHuman","secret","encrypted","encryptedObjectHuman","subname","encryptedDeepHuman","firstLevelPassword","secretData","pw","deepSecret","darkhole","nestedSecret","notExistingIndex","address","street","compoundIndex","passportCountry","compoundIndexNoString","empty","id","heroArray","skills","maxItems","uniqueItems","items","damage","simpleArrayHero","primaryHumanLiteral","minLength","primaryHumanTypedSchema","primaryHuman","humanNormalizeSchema1Literal","humanNormalizeSchema1Typed","humanNormalizeSchema1","humanNormalizeSchema2","refHuman","bestFriend","ref","humanCompositePrimary","key","fields","separator","info","humanCompositePrimarySchemaLiteral","readonlyProps","allOf","anyOf","oneOf","dependencies","someDep","enum","humanCompositePrimarySchemaTyped","refHumanNested","foo","averageSchema","ret","randomString","var1","var2","deep","deep1","deep2","list","sharding","shards","mode","point","x","y","humanMinimal","humanMinimalBroken","broken","humanWithTimestamp","updatedAt","deletedAt","humanWithTimestampAllIndex","humanWithSimpleAndCompoundIndexes","createdAt","humanWithDeepNestedIndexes","job","manager","fullName","previousJobs","humanIdAndAgeIndex","enableKeyCompression","schema"],"sources":["../../../../src/plugins/test-utils/schemas.ts"],"sourcesContent":["import AsyncTestUtil from 'async-test-util';\n\nimport {\n    SimpleHumanV3DocumentType,\n    HumanWithSubOtherDocumentType,\n    NestedHumanDocumentType,\n    DeepNestedHumanDocumentType,\n    EncryptedHumanDocumentType,\n    EncryptedObjectHumanDocumentType,\n    EncryptedDeepHumanDocumentType,\n    CompoundIndexDocumentType,\n    CompoundIndexNoStringDocumentType,\n    HeroArrayDocumentType,\n    SimpleHeroArrayDocumentType,\n    RefHumanDocumentType,\n    RefHumanNestedDocumentType,\n    AverageSchemaDocumentType,\n    PointDocumentType,\n    HumanWithTimestampDocumentType,\n    BigHumanDocumentType,\n    NostringIndexDocumentType,\n    NoIndexHumanDocumentType,\n    HumanWithCompositePrimary\n} from './schema-objects.ts';\nimport { overwritable } from '../../overwritable.ts';\nimport { toTypedRxJsonSchema } from '../../rx-schema.ts';\nimport type {\n    ExtractDocumentTypeFromTypedRxJsonSchema,\n    RxJsonSchema\n} from '../../types/rx-schema';\nimport { flatClone } from '../utils/index.ts';\n\n\nexport const humanSchemaLiteral = overwritable.deepFreezeWhenDevMode({\n    title: 'human schema',\n    description: 'describes a human being',\n    version: 0,\n    keyCompression: false,\n    primaryKey: 'passportId',\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        firstName: {\n            type: 'string',\n            maxLength: 100\n        },\n        lastName: {\n            type: 'string',\n            maxLength: 100\n        },\n        age: {\n            description: 'age in years',\n            type: 'integer',\n            minimum: 0,\n            maximum: 150,\n            multipleOf: 1\n        }\n    },\n    required: ['firstName', 'lastName', 'passportId', 'age'],\n    indexes: ['firstName']\n} as const);\nconst humanSchemaTyped = toTypedRxJsonSchema(humanSchemaLiteral);\nexport type HumanDocumentType = ExtractDocumentTypeFromTypedRxJsonSchema<typeof humanSchemaTyped>;\nexport const human: RxJsonSchema<HumanDocumentType> = humanSchemaLiteral;\n\n\nexport const humanDefault: RxJsonSchema<HumanDocumentType> = overwritable.deepFreezeWhenDevMode({\n    title: 'human schema',\n    version: 0,\n    description: 'describes a human being',\n    keyCompression: false,\n    primaryKey: 'passportId',\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        firstName: {\n            type: 'string',\n            maxLength: 100\n        },\n        lastName: {\n            type: 'string',\n            maxLength: 100\n        },\n        age: {\n            description: 'age in years',\n            type: 'integer',\n            minimum: 0,\n            maximum: 150,\n            default: 20\n        }\n    },\n    indexes: [],\n    required: ['passportId']\n});\n\nexport const humanFinal: RxJsonSchema<HumanDocumentType> = overwritable.deepFreezeWhenDevMode({\n    title: 'human schema with age set final',\n    version: 0,\n    keyCompression: false,\n    type: 'object',\n    primaryKey: 'passportId',\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        firstName: {\n            type: 'string'\n        },\n        lastName: {\n            type: 'string'\n        },\n        age: {\n            type: 'integer',\n            minimum: 0,\n            maximum: 150,\n            final: true\n        }\n    },\n    required: [\n        'passportId'\n    ]\n});\n\nexport const simpleHuman: RxJsonSchema<SimpleHumanV3DocumentType> = overwritable.deepFreezeWhenDevMode({\n    title: 'human schema',\n    version: 0,\n    keyCompression: false,\n    description: 'describes a simple human being',\n    primaryKey: 'passportId',\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        age: {\n            type: 'string',\n            maxLength: 100\n        },\n        oneOptional: {\n            type: 'string'\n        }\n    },\n    indexes: ['age'],\n    required: ['passportId', 'age']\n});\n\nexport const simpleHumanV3: RxJsonSchema<SimpleHumanV3DocumentType> = overwritable.deepFreezeWhenDevMode({\n    title: 'human schema',\n    version: 3,\n    keyCompression: false,\n    description: 'describes a simple human being',\n    type: 'object',\n    primaryKey: 'passportId',\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        age: {\n            type: 'number',\n            minimum: 0,\n            maximum: 1000,\n            multipleOf: 1\n        },\n        oneOptional: {\n            type: 'string'\n        }\n    },\n    indexes: ['age'],\n    required: ['passportId', 'age']\n});\n\nexport const humanAgeIndex: RxJsonSchema<HumanDocumentType> = overwritable.deepFreezeWhenDevMode({\n    title: 'human schema',\n    version: 0,\n    keyCompression: false,\n    description: 'describes a human being',\n    primaryKey: 'passportId',\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        firstName: {\n            type: 'string'\n        },\n        lastName: {\n            type: 'string'\n        },\n        age: {\n            description: 'Age in years',\n            type: 'integer',\n            minimum: 0,\n            maximum: 150,\n            multipleOf: 1\n        }\n    },\n    required: ['firstName', 'lastName', 'age'],\n    indexes: ['age']\n});\n\nexport const humanSubIndex: RxJsonSchema<HumanWithSubOtherDocumentType> = overwritable.deepFreezeWhenDevMode({\n    title: 'human schema',\n    version: 0,\n    description: 'describes a human being where other.age is index',\n    keyCompression: false,\n    primaryKey: 'passportId',\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        other: {\n            type: 'object',\n            properties: {\n                age: {\n                    description: 'Age in years',\n                    type: 'integer',\n                    minimum: 0,\n                    maximum: 150,\n                    multipleOf: 1\n                }\n            }\n        }\n    },\n    required: [\n        'passportId'\n    ],\n    indexes: ['other.age']\n});\n\n/**\n * each field is an index,\n * use this to slow down inserts in tests\n */\nexport const humanWithAllIndex: RxJsonSchema<HumanDocumentType> = overwritable.deepFreezeWhenDevMode({\n    title: 'human schema',\n    description: 'describes a human being',\n    version: 0,\n    keyCompression: false,\n    primaryKey: 'passportId',\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        firstName: {\n            type: 'string',\n            maxLength: 100\n        },\n        lastName: {\n            type: 'string',\n            maxLength: 100\n        },\n        age: {\n            description: 'age in years',\n            type: 'integer',\n            minimum: 0,\n            maximum: 150,\n            multipleOf: 1\n        }\n    },\n    indexes: ['firstName', 'lastName', 'age'],\n    required: ['firstName', 'lastName']\n});\n\nexport const nestedHuman: RxJsonSchema<NestedHumanDocumentType> = {\n    title: 'human nested',\n    version: 0,\n    description: 'describes a human being with a nested field',\n    keyCompression: false,\n    primaryKey: 'passportId',\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        firstName: {\n            type: 'string',\n            maxLength: 100\n        },\n        mainSkill: {\n            type: 'object',\n            properties: {\n                name: {\n                    type: 'string',\n                    maxLength: 10\n                },\n                level: {\n                    type: 'number',\n                    minimum: 0,\n                    maximum: 10,\n                    multipleOf: 1\n                }\n            },\n            required: ['name', 'level'],\n            additionalProperties: false\n        }\n    },\n    required: ['firstName'],\n    indexes: []\n};\n\nexport const deepNestedHuman: RxJsonSchema<DeepNestedHumanDocumentType> = {\n    title: 'deep human nested',\n    version: 0,\n    keyCompression: false,\n    description: 'describes a human being with a nested field',\n    primaryKey: 'passportId',\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        mainSkill: {\n            type: 'object',\n            properties: {\n                name: {\n                    type: 'string'\n                },\n                attack: {\n                    type: 'object',\n                    properties: {\n                        good: {\n                            type: 'boolean'\n                        },\n                        count: {\n                            type: 'number'\n                        }\n                    }\n                }\n            },\n            required: ['name']\n        }\n    },\n    indexes: [],\n    required: ['mainSkill']\n};\n\nexport const noIndexHuman: RxJsonSchema<NoIndexHumanDocumentType> = overwritable.deepFreezeWhenDevMode({\n    title: 'human schema',\n    version: 0,\n    description: 'this schema has no index',\n    keyCompression: false,\n    primaryKey: 'firstName',\n    type: 'object',\n    properties: {\n        firstName: {\n            type: 'string',\n            maxLength: 100\n        },\n        lastName: {\n            type: 'string'\n        }\n    },\n    required: ['lastName']\n});\n\nexport const noStringIndex: RxJsonSchema<NostringIndexDocumentType> = overwritable.deepFreezeWhenDevMode({\n    description: 'the index has no type:string',\n    version: 0,\n    keyCompression: false,\n    primaryKey: 'passportId',\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'object',\n            maxLength: 100\n        },\n        firstName: {\n            type: 'string'\n        }\n    },\n    required: ['firstName', 'passportId'],\n    indexes: []\n});\n\n\nexport const bigHuman: RxJsonSchema<BigHumanDocumentType> = overwritable.deepFreezeWhenDevMode({\n    title: 'human schema',\n    version: 0,\n    description: 'describes a human being with 2 indexes',\n    keyCompression: false,\n    primaryKey: 'passportId',\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        dnaHash: {\n            type: 'string',\n            maxLength: 100\n        },\n        firstName: {\n            type: 'string',\n            maxLength: 100\n        },\n        lastName: {\n            type: 'string'\n        },\n        age: {\n            description: 'Age in years',\n            type: 'integer',\n            minimum: 0\n        }\n    },\n    required: ['firstName', 'lastName'],\n    indexes: ['firstName', 'dnaHash']\n});\n\nexport const encryptedHuman: RxJsonSchema<EncryptedHumanDocumentType> = {\n    title: 'human encrypted',\n    version: 0,\n    description: 'uses an encrypted field',\n    primaryKey: 'passportId',\n    type: 'object',\n    keyCompression: false,\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        firstName: {\n            type: 'string'\n        },\n        secret: {\n            type: 'string'\n        }\n    },\n    indexes: [],\n    required: ['firstName', 'secret'],\n    encrypted: ['secret']\n};\n\nexport const encryptedObjectHuman: RxJsonSchema<EncryptedObjectHumanDocumentType> = {\n    title: 'human encrypted',\n    version: 0,\n    keyCompression: false,\n    description: 'uses an encrypted field',\n    primaryKey: 'passportId',\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        firstName: {\n            type: 'string'\n        },\n        secret: {\n            type: 'object',\n            properties: {\n                name: {\n                    type: 'string'\n                },\n                subname: {\n                    type: 'string'\n                }\n            }\n        }\n    },\n    indexes: [],\n    required: ['firstName', 'secret'],\n    encrypted: ['secret']\n};\n\nexport const encryptedDeepHuman: RxJsonSchema<EncryptedDeepHumanDocumentType> = {\n    title: 'human encrypted',\n    version: 0,\n    keyCompression: false,\n    description: 'uses an encrypted field',\n    primaryKey: 'passportId',\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        firstName: {\n            type: 'string'\n        },\n        firstLevelPassword: {\n            type: 'string',\n        },\n        secretData: {\n            type: 'object',\n            properties: {\n                pw: {\n                    type: 'string'\n                }\n            }\n        },\n        deepSecret: {\n            type: 'object',\n            properties: {\n                darkhole: {\n                    type: 'object',\n                    properties: {\n                        pw: {\n                            type: 'string'\n                        }\n                    }\n                }\n            }\n        },\n        nestedSecret: {\n            type: 'object',\n            properties: {\n                darkhole: {\n                    type: 'object',\n                    properties: {\n                        pw: {\n                            type: 'string'\n                        }\n                    }\n                }\n            }\n        }\n\n    },\n    indexes: [],\n    required: ['firstName', 'secretData'],\n    encrypted: [\n        'firstLevelPassword',\n        'secretData',\n        'deepSecret.darkhole.pw',\n        'nestedSecret.darkhole.pw'\n    ]\n};\n\nexport const notExistingIndex: RxJsonSchema<{ passportId: string; address: { street: string; }; }> = {\n    title: 'index',\n    version: 0,\n    description: 'this schema has a specified index which does not exists',\n    primaryKey: 'passportId',\n    type: 'object',\n    keyCompression: false,\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        address: {\n            type: 'object',\n            properties: {\n                street: { type: 'string' }\n            }\n        }\n    },\n    required: [\n        'passportId'\n    ],\n    indexes: ['address.apartment']\n};\n\nexport const compoundIndex: RxJsonSchema<CompoundIndexDocumentType> = overwritable.deepFreezeWhenDevMode({\n    title: 'compound index',\n    version: 0,\n    description: 'this schema has a compoundIndex',\n    primaryKey: 'passportId',\n    type: 'object',\n    keyCompression: false,\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        passportCountry: {\n            type: 'string',\n            maxLength: 100\n        },\n        age: {\n            type: 'integer',\n            minimum: 0,\n            maximum: 150,\n            multipleOf: 1\n        }\n    },\n    required: [\n        'passportId'\n    ],\n    indexes: [\n        ['age', 'passportCountry']\n    ]\n});\n\nexport const compoundIndexNoString: RxJsonSchema<CompoundIndexNoStringDocumentType> = {\n    title: 'compound index',\n    version: 0,\n    description: 'this schema has a compoundIndex',\n    primaryKey: 'passportId',\n    keyCompression: false,\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        passportCountry: {\n            type: 'object'\n        },\n        age: {\n            type: 'integer'\n        }\n    },\n    indexes: [\n        [10, 'passportCountry']\n    ]\n} as RxJsonSchema<CompoundIndexNoStringDocumentType>;\n\nexport const empty: RxJsonSchema<any> = {\n    title: 'empty schema',\n    version: 0,\n    type: 'object',\n    primaryKey: 'id',\n    properties: {\n        id: {\n            type: 'string',\n            maxLength: 100\n        }\n    },\n    required: ['id']\n};\n\nexport const heroArray: RxJsonSchema<HeroArrayDocumentType> = overwritable.deepFreezeWhenDevMode({\n    title: 'hero schema',\n    version: 0,\n    keyCompression: false,\n    description: 'describes a hero with an array-field',\n    primaryKey: 'name',\n    type: 'object',\n    properties: {\n        name: {\n            type: 'string',\n            maxLength: 100\n        },\n        skills: {\n            type: 'array',\n            maxItems: 5,\n            uniqueItems: true,\n            items: {\n                type: 'object',\n                properties: {\n                    name: {\n                        type: 'string'\n                    },\n                    damage: {\n                        type: 'number'\n                    }\n                }\n            }\n        }\n    },\n    required: [\n        'name'\n    ]\n});\n\nexport const simpleArrayHero: RxJsonSchema<SimpleHeroArrayDocumentType> = overwritable.deepFreezeWhenDevMode({\n    title: 'hero schema',\n    version: 0,\n    description: 'describes a hero with a string-array-field',\n    keyCompression: false,\n    primaryKey: 'name',\n    type: 'object',\n    properties: {\n        name: {\n            type: 'string',\n            maxLength: 100\n        },\n        skills: {\n            type: 'array',\n            maxItems: 5,\n            uniqueItems: true,\n            items: {\n                type: 'string',\n            }\n        }\n    },\n    required: [\n        'name'\n    ]\n});\n\nexport const primaryHumanLiteral = overwritable.deepFreezeWhenDevMode({\n    title: 'human schema with primary',\n    version: 0,\n    description: 'describes a human being with passportID as primary',\n    keyCompression: false,\n    primaryKey: 'passportId',\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'string',\n            minLength: 4,\n            maxLength: 100\n        },\n        firstName: {\n            type: 'string',\n            maxLength: 100\n        },\n        lastName: {\n            type: 'string',\n            maxLength: 500\n        },\n        age: {\n            type: 'integer',\n            minimum: 0,\n            maximum: 150,\n            multipleOf: 1\n        }\n    },\n    required: ['passportId', 'firstName', 'lastName']\n} as const);\nconst primaryHumanTypedSchema = toTypedRxJsonSchema(primaryHumanLiteral);\nexport type PrimaryHumanDocType = ExtractDocumentTypeFromTypedRxJsonSchema<typeof primaryHumanTypedSchema>;\nexport const primaryHuman: RxJsonSchema<PrimaryHumanDocType> = primaryHumanLiteral;\n\nexport const humanNormalizeSchema1Literal = overwritable.deepFreezeWhenDevMode({\n    title: 'human schema',\n    version: 0,\n    keyCompression: false,\n    description: 'describes a human being',\n    primaryKey: 'passportId',\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'string',\n            minLength: 4,\n            maxLength: 100\n        },\n        age: {\n            description: 'age in years',\n            type: 'integer',\n            minimum: 0,\n            maximum: 150,\n            multipleOf: 1\n        }\n    },\n    required: ['age', 'passportId']\n} as const);\nconst humanNormalizeSchema1Typed = toTypedRxJsonSchema(humanNormalizeSchema1Literal);\nexport type AgeHumanDocumentType = ExtractDocumentTypeFromTypedRxJsonSchema<typeof humanNormalizeSchema1Typed>;\nexport const humanNormalizeSchema1: RxJsonSchema<AgeHumanDocumentType> = humanNormalizeSchema1Literal;\n\nexport const humanNormalizeSchema2: RxJsonSchema<AgeHumanDocumentType> = overwritable.deepFreezeWhenDevMode({\n    title: 'human schema',\n    version: 0,\n    keyCompression: false,\n    primaryKey: 'passportId',\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'string',\n            minLength: 4,\n            maxLength: 100\n        },\n        age: {\n            minimum: 0,\n            type: 'integer',\n            description: 'age in years',\n            maximum: 150,\n            multipleOf: 1\n        }\n    },\n    description: 'describes a human being',\n    required: ['age', 'passportId']\n});\n\nexport const refHuman: RxJsonSchema<RefHumanDocumentType> = overwritable.deepFreezeWhenDevMode({\n    title: 'human related to other human',\n    version: 0,\n    keyCompression: false,\n    primaryKey: 'name',\n    type: 'object',\n    properties: {\n        name: {\n            type: 'string',\n            maxLength: 100\n        },\n        bestFriend: {\n            ref: 'human',\n            type: 'string'\n        }\n    },\n    required: [\n        'name'\n    ]\n});\n\nexport const humanCompositePrimary: RxJsonSchema<HumanWithCompositePrimary> = {\n    title: 'human schema',\n    description: 'describes a human being',\n    version: 0,\n    keyCompression: false,\n    primaryKey: {\n        key: 'id',\n        fields: [\n            'firstName',\n            'info.age'\n        ],\n        separator: '|'\n    },\n    type: 'object',\n    properties: {\n        id: {\n            type: 'string',\n            maxLength: 100\n        },\n        firstName: {\n            type: 'string',\n            maxLength: 100\n        },\n        lastName: {\n            type: 'string'\n        },\n        info: {\n            type: 'object',\n            properties: {\n                age: {\n                    description: 'age in years',\n                    type: 'integer',\n                    minimum: 0,\n                    maximum: 150\n                }\n            },\n            required: ['age']\n        }\n    },\n    required: [\n        'id',\n        'firstName',\n        'lastName',\n        'info'\n    ],\n    indexes: ['firstName']\n};\n\nexport const humanCompositePrimarySchemaLiteral = overwritable.deepFreezeWhenDevMode({\n    title: 'human schema',\n    description: 'describes a human being',\n    version: 0,\n    keyCompression: false,\n    primaryKey: {\n        key: 'id',\n        fields: [\n            'firstName',\n            'info.age'\n        ],\n        separator: '|'\n    },\n    encrypted: [],\n    type: 'object',\n    properties: {\n        id: {\n            type: 'string',\n            maxLength: 100\n        },\n        firstName: {\n            type: 'string',\n            maxLength: 100\n        },\n        lastName: {\n            type: 'string'\n        },\n        info: {\n            type: 'object',\n            properties: {\n                age: {\n                    description: 'age in years',\n                    type: 'integer',\n                    minimum: 0,\n                    maximum: 150\n                }\n            },\n            required: ['age']\n        },\n        readonlyProps: {\n            allOf: [],\n            anyOf: [],\n            oneOf: [],\n            type: [],\n            dependencies: {\n                someDep: ['asd'],\n            },\n            items: [],\n            required: [],\n            enum: [],\n        }\n    },\n    required: [\n        'id',\n        'firstName',\n        'lastName',\n        'info'\n    ],\n    indexes: ['firstName']\n} as const);\n\nconst humanCompositePrimarySchemaTyped = toTypedRxJsonSchema(humanCompositePrimarySchemaLiteral);\nexport type HumanCompositePrimaryDocType = ExtractDocumentTypeFromTypedRxJsonSchema<typeof humanCompositePrimarySchemaTyped>;\n\nexport const refHumanNested: RxJsonSchema<RefHumanNestedDocumentType> = overwritable.deepFreezeWhenDevMode({\n    title: 'human related to other human',\n    version: 0,\n    keyCompression: false,\n    primaryKey: 'name',\n    type: 'object',\n    properties: {\n        name: {\n            type: 'string',\n            maxLength: 100\n        },\n        foo: {\n            type: 'object',\n            properties: {\n                bestFriend: {\n                    ref: 'human',\n                    type: 'string'\n                }\n            }\n        }\n    },\n    required: [\n        'name'\n    ]\n});\n\n/**\n * an average schema used in performance-tests\n */\nexport function averageSchema(): RxJsonSchema<AverageSchemaDocumentType> {\n    const ret: RxJsonSchema<AverageSchemaDocumentType> = {\n        title: 'averageSchema_' + AsyncTestUtil.randomString(5), // randomisation used so hash differs\n        version: 0,\n        primaryKey: 'id',\n        type: 'object',\n        keyCompression: false,\n        properties: {\n            id: {\n                type: 'string',\n                maxLength: 12\n            },\n            var1: {\n                type: 'string',\n                maxLength: 12\n            },\n            var2: {\n                type: 'number',\n                minimum: 0,\n                maximum: 50000,\n                multipleOf: 1\n            },\n            deep: {\n                type: 'object',\n                properties: {\n                    deep1: {\n                        type: 'string',\n                        maxLength: 10\n                    },\n                    deep2: {\n                        type: 'string',\n                        maxLength: 10\n                    }\n                }\n            },\n            list: {\n                type: 'array',\n                items: {\n                    type: 'object',\n                    properties: {\n                        deep1: {\n                            type: 'string'\n                        },\n                        deep2: {\n                            type: 'string'\n                        }\n                    }\n                }\n            }\n        },\n        required: [\n            'id'\n        ],\n        indexes: [\n            'var1',\n            'var2',\n            'deep.deep1',\n            // one compound index\n            [\n                'var2',\n                'var1'\n            ]\n        ],\n        sharding: {\n            shards: 6,\n            mode: 'collection'\n        }\n    };\n    return ret;\n}\n\nexport const point: RxJsonSchema<PointDocumentType> = overwritable.deepFreezeWhenDevMode({\n    title: 'point schema',\n    version: 0,\n    description: 'describes coordinates in 2d space',\n    primaryKey: 'id',\n    type: 'object',\n    properties: {\n        id: {\n            type: 'string',\n            maxLength: 100\n        },\n        x: {\n            type: 'number'\n        },\n        y: {\n            type: 'number'\n        }\n    },\n    required: ['x', 'y']\n});\n\nexport const humanMinimal: RxJsonSchema<SimpleHumanV3DocumentType> = overwritable.deepFreezeWhenDevMode({\n    title: 'human schema',\n    description: 'describes a human being',\n    version: 0,\n    keyCompression: false,\n    primaryKey: 'passportId',\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        age: {\n            type: 'integer'\n        },\n        oneOptional: {\n            type: 'string'\n        }\n    },\n    indexes: [],\n    required: ['passportId', 'age']\n});\n\nexport const humanMinimalBroken: RxJsonSchema<{ passportId: string; broken: number; }> = {\n    title: 'human schema',\n    description: 'describes a human being',\n    version: 0,\n    keyCompression: false,\n    primaryKey: 'passportId',\n    type: 'object',\n    properties: {\n        passportId: {\n            type: 'string',\n            maxLength: 100\n        },\n        broken: {\n            type: 'integer'\n        }\n    },\n    indexes: [],\n    required: ['passportId', 'broken']\n} as unknown as RxJsonSchema<any>;\n\n\n/**\n * used in the graphql-test\n * contains timestamp\n */\nexport const humanWithTimestamp: RxJsonSchema<HumanWithTimestampDocumentType> = overwritable.deepFreezeWhenDevMode({\n    version: 0,\n    type: 'object',\n    primaryKey: 'id',\n    properties: {\n        id: {\n            type: 'string',\n            maxLength: 100\n        },\n        name: {\n            type: 'string',\n            maxLength: 1000\n        },\n        age: {\n            type: 'number'\n        },\n        updatedAt: {\n            type: 'number',\n            minimum: 0,\n            maximum: 10000000000000000,\n            multipleOf: 1\n\n        },\n        deletedAt: {\n            type: 'number'\n        }\n    },\n    indexes: ['updatedAt'],\n    required: ['id', 'name', 'age', 'updatedAt']\n});\n\n/**\n * each field is an index,\n * use this to slow down inserts in tests\n */\nexport const humanWithTimestampAllIndex: RxJsonSchema<HumanWithTimestampDocumentType> = overwritable.deepFreezeWhenDevMode({\n    version: 0,\n    type: 'object',\n    primaryKey: 'id',\n    properties: {\n        id: {\n            type: 'string',\n            maxLength: 100\n        },\n        name: {\n            type: 'string',\n            maxLength: 100\n        },\n        age: {\n            type: 'number',\n            minimum: 0,\n            maximum: 1500,\n            multipleOf: 1\n        },\n        updatedAt: {\n            type: 'number',\n            minimum: 0,\n            maximum: 10000000000000000,\n            multipleOf: 1\n        },\n        deletedAt: {\n            type: 'number'\n        }\n    },\n    indexes: ['name', 'age', 'updatedAt'],\n    required: ['id', 'name', 'age', 'updatedAt']\n});\n\nexport const humanWithSimpleAndCompoundIndexes: RxJsonSchema<{\n    id: string;\n    name: string;\n    age: number;\n    createdAt: number;\n    updatedAt: number;\n}> = overwritable.deepFreezeWhenDevMode({\n    version: 0,\n    primaryKey: 'id',\n    type: 'object',\n    properties: {\n        id: {\n            type: 'string',\n            maxLength: 100\n        },\n        name: {\n            type: 'string',\n            maxLength: 100\n        },\n        age: {\n            type: 'number',\n            minimum: 0,\n            maximum: 1500,\n            multipleOf: 1\n        },\n        createdAt: {\n            type: 'number',\n            minimum: 0,\n            maximum: 10000000000000000,\n            multipleOf: 1\n        },\n        updatedAt: {\n            type: 'number',\n            minimum: 0,\n            maximum: 10000000000000000,\n            multipleOf: 1\n        }\n    },\n    indexes: [\n        ['name', 'id'],\n        ['age', 'id'],\n        ['createdAt', 'updatedAt', 'id']\n    ],\n    required: ['id', 'name', 'age', 'updatedAt']\n});\n\nexport const humanWithDeepNestedIndexes: RxJsonSchema<{ id: string; name: string; job: any; }> = overwritable.deepFreezeWhenDevMode({\n    version: 0,\n    primaryKey: 'id',\n    type: 'object',\n    properties: {\n        id: {\n            type: 'string',\n            maxLength: 100\n        },\n        name: {\n            type: 'string',\n            maxLength: 100\n        },\n        job: {\n            type: 'object',\n            properties: {\n                name: {\n                    type: 'string',\n                    maxLength: 100\n                },\n                manager: {\n                    type: 'object',\n                    properties: {\n                        fullName: {\n                            type: 'string',\n                            maxLength: 100\n                        },\n                        previousJobs: {\n                            type: 'array',\n                            items: {\n                                type: 'object',\n                                properties: {\n                                    name: {\n                                        type: 'string',\n                                        maxLength: 100\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    required: [\n        'id'\n    ],\n    indexes: [\n        'name',\n        'job.name',\n        'job.manager.fullName'\n    ]\n});\n\nexport const humanIdAndAgeIndex: RxJsonSchema<{ id: string; name: string; age: number; }> = overwritable.deepFreezeWhenDevMode({\n    version: 0,\n    description: 'uses a compound index with id as lowest level',\n    primaryKey: 'id',\n    type: 'object',\n    properties: {\n        id: {\n            type: 'string',\n            maxLength: 100\n        },\n        name: {\n            type: 'string'\n        },\n        age: {\n            description: 'Age in years',\n            type: 'integer',\n            minimum: 0,\n            maximum: 150,\n            multipleOf: 1\n        }\n    },\n    required: ['id', 'name', 'age'],\n    indexes: [\n        ['age', 'id']\n    ]\n});\n\n\nexport function enableKeyCompression<RxDocType>(\n    schema: RxJsonSchema<RxDocType>\n): RxJsonSchema<RxDocType> {\n    const ret = flatClone(schema);\n    ret.keyCompression = true;\n    return ret;\n}\n"],"mappings":"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","ignoreList":[]}