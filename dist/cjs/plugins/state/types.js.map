{"version":3,"file":"types.js","names":[],"sources":["../../../../src/plugins/state/types.ts"],"sourcesContent":["import { DeepReadonly } from '../../types';\n\n/**\n * \n */\nexport type RxStateDocument = {\n    /**\n     * Ensures that when multiple\n     * javascript realms write at the same time,\n     * we do not overwrite each other but instead\n     * one write must conflict-error and retry.\n     * The clock value is also the primary key.\n     * The clock value contains incremental numbers\n     * in a string format like '0001', '0123'...\n     */\n    id: string;\n    /**\n     * Id of the JavaScript Instance of RxState\n     * that did the write. Used to optimise performance\n     * by not running these modifiers twice.\n     */\n    sId: string;\n    ops: RxStateOperation[]\n};\n\n\nexport type RxStateOperation = {\n    k: string;\n    v: any;\n};\n\nexport type RxStateModifier = (preValue: DeepReadonly<any>) => any;\n"],"mappings":"","ignoreList":[]}