{"version":3,"file":"entity-properties.js","names":["RxCollectionBase","RxDatabaseBase","createRxDocumentConstructor","basePrototype","_rxCollectionProperties","rxCollectionProperties","pseudoInstance","ownProperties","Object","getOwnPropertyNames","prototypeProperties","getPrototypeOf","_rxDatabaseProperties","rxDatabaseProperties","destroy","pseudoConstructor","pseudoRxDocument","_rxDocumentProperties","rxDocumentProperties","reserved"],"sources":["../../../../src/plugins/dev-mode/entity-properties.ts"],"sourcesContent":["import { RxCollectionBase } from '../../rx-collection.ts';\nimport { RxDatabaseBase } from '../../rx-database.ts';\nimport { createRxDocumentConstructor, basePrototype } from '../../rx-document.ts';\n\n/**\n * returns all possible properties of a RxCollection-instance\n */\nlet _rxCollectionProperties: string[];\nexport function rxCollectionProperties(): string[] {\n    if (!_rxCollectionProperties) {\n        const pseudoInstance = new (RxCollectionBase as any)();\n        const ownProperties = Object.getOwnPropertyNames(pseudoInstance);\n        const prototypeProperties = Object.getOwnPropertyNames(\n            Object.getPrototypeOf(pseudoInstance)\n        );\n        _rxCollectionProperties = [...ownProperties, ...prototypeProperties];\n    }\n    return _rxCollectionProperties;\n}\n\n\n/**\n * returns all possible properties of a RxDatabase-instance\n */\nlet _rxDatabaseProperties: string[];\nexport function rxDatabaseProperties(): string[] {\n    if (!_rxDatabaseProperties) {\n        const pseudoInstance: RxDatabaseBase<any, any> = new (RxDatabaseBase as any)(\n            'pseudoInstance',\n            'memory'\n        );\n        const ownProperties = Object.getOwnPropertyNames(pseudoInstance);\n        const prototypeProperties = Object.getOwnPropertyNames(\n            Object.getPrototypeOf(pseudoInstance)\n        );\n        _rxDatabaseProperties = [...ownProperties, ...prototypeProperties];\n        pseudoInstance.destroy();\n    }\n    return _rxDatabaseProperties;\n}\n\n/**\n * returns all possible properties of a RxDocument\n */\nconst pseudoConstructor = createRxDocumentConstructor(basePrototype);\nconst pseudoRxDocument = new (pseudoConstructor as any)();\nlet _rxDocumentProperties: string[];\nexport function rxDocumentProperties(): string[] {\n    if (!_rxDocumentProperties) {\n        const reserved = ['deleted', 'synced'];\n        const ownProperties = Object.getOwnPropertyNames(pseudoRxDocument);\n        const prototypeProperties = Object.getOwnPropertyNames(basePrototype);\n        _rxDocumentProperties = [...ownProperties, ...prototypeProperties, ...reserved];\n    }\n    return _rxDocumentProperties;\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,2BAA2B,EAAEC,aAAa,QAAQ,sBAAsB;;AAEjF;AACA;AACA;AACA,IAAIC,uBAAiC;AACrC,OAAO,SAASC,sBAAsBA,CAAA,EAAa;EAC/C,IAAI,CAACD,uBAAuB,EAAE;IAC1B,IAAME,cAAc,GAAG,IAAKN,gBAAgB,CAAS,CAAC;IACtD,IAAMO,aAAa,GAAGC,MAAM,CAACC,mBAAmB,CAACH,cAAc,CAAC;IAChE,IAAMI,mBAAmB,GAAGF,MAAM,CAACC,mBAAmB,CAClDD,MAAM,CAACG,cAAc,CAACL,cAAc,CACxC,CAAC;IACDF,uBAAuB,GAAG,CAAC,GAAGG,aAAa,EAAE,GAAGG,mBAAmB,CAAC;EACxE;EACA,OAAON,uBAAuB;AAClC;;AAGA;AACA;AACA;AACA,IAAIQ,qBAA+B;AACnC,OAAO,SAASC,oBAAoBA,CAAA,EAAa;EAC7C,IAAI,CAACD,qBAAqB,EAAE;IACxB,IAAMN,cAAwC,GAAG,IAAKL,cAAc,CAChE,gBAAgB,EAChB,QACJ,CAAC;IACD,IAAMM,aAAa,GAAGC,MAAM,CAACC,mBAAmB,CAACH,cAAc,CAAC;IAChE,IAAMI,mBAAmB,GAAGF,MAAM,CAACC,mBAAmB,CAClDD,MAAM,CAACG,cAAc,CAACL,cAAc,CACxC,CAAC;IACDM,qBAAqB,GAAG,CAAC,GAAGL,aAAa,EAAE,GAAGG,mBAAmB,CAAC;IAClEJ,cAAc,CAACQ,OAAO,CAAC,CAAC;EAC5B;EACA,OAAOF,qBAAqB;AAChC;;AAEA;AACA;AACA;AACA,IAAMG,iBAAiB,GAAGb,2BAA2B,CAACC,aAAa,CAAC;AACpE,IAAMa,gBAAgB,GAAG,IAAKD,iBAAiB,CAAS,CAAC;AACzD,IAAIE,qBAA+B;AACnC,OAAO,SAASC,oBAAoBA,CAAA,EAAa;EAC7C,IAAI,CAACD,qBAAqB,EAAE;IACxB,IAAME,QAAQ,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC;IACtC,IAAMZ,aAAa,GAAGC,MAAM,CAACC,mBAAmB,CAACO,gBAAgB,CAAC;IAClE,IAAMN,mBAAmB,GAAGF,MAAM,CAACC,mBAAmB,CAACN,aAAa,CAAC;IACrEc,qBAAqB,GAAG,CAAC,GAAGV,aAAa,EAAE,GAAGG,mBAAmB,EAAE,GAAGS,QAAQ,CAAC;EACnF;EACA,OAAOF,qBAAqB;AAChC","ignoreList":[]}