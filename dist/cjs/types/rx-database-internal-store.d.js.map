{"version":3,"file":"rx-database-internal-store.d.js","names":[],"sources":["../../../src/types/rx-database-internal-store.d.ts"],"sourcesContent":["import type {\n    RxMigrationStatus\n} from '../plugins/migration-schema/index.ts';\nimport type { RxJsonSchema } from './rx-schema.d.ts';\n\nexport type InternalStoreDocType<Data = any> = {\n    id: string;\n    key: string;\n    context: string;\n    data: Data;\n};\n\n/**\n * Stores information about the collections.\n * The collection.name is the 'key' value.\n */\nexport type InternalStoreStorageTokenDocType = InternalStoreDocType<{\n    rxdbVersion: string;\n    token: string;\n    instanceToken: string;\n    passwordHash?: string;\n}>;\n\n/**\n * Stores information about the collections.\n * The collection.name is the 'key' value.\n */\nexport type InternalStoreCollectionDocType = InternalStoreDocType<{\n    /**\n     * Plain name of the collection\n     */\n    name: string;\n    schema: RxJsonSchema<any>;\n    schemaHash: string;\n    version: number;\n\n    /**\n     * Storages that are connected to this collection\n     * so that when the collection is removed,\n     * these storages must also be removed.\n     * For example the replication meta storage\n     * must be reset when the collection is removed.\n     */\n    connectedStorages: {\n        collectionName: string;\n        schema: RxJsonSchema<any>;\n    }[];\n\n    /**\n     * Contains the migration status\n     * only if a migration has been started.\n     */\n    migrationStatus?: RxMigrationStatus;\n}>;\n"],"mappings":"","ignoreList":[]}