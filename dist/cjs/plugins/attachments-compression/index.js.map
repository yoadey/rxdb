{"version":3,"file":"index.js","names":["_pluginHelpers","require","_index","compressBase64","mode","base64String","arrayBuffer","base64ToArrayBuffer","stream","ensureNotFalsy","Response","body","pipeThrough","CompressionStream","result","arrayBufferToBase64","decompressBase64","DecompressionStream","wrappedAttachmentsCompressionStorage","args","Object","assign","storage","createStorageInstance","params","schema","attachments","compression","modifyToStorage","docData","Promise","all","values","_attachments","map","attachment","data","attachmentWriteData","modifyAttachmentFromStorage","attachmentData","childSchema","flatClone","instance","wrapRxStorageInstance","d"],"sources":["../../../../src/plugins/attachments-compression/index.ts"],"sourcesContent":["import { wrapRxStorageInstance } from '../../plugin-helpers.ts';\nimport type {\n    RxStorage,\n    RxStorageInstanceCreationParams,\n    RxDocumentWriteData,\n    CompressionMode,\n    RxAttachmentWriteData\n} from '../../types/index.d.ts';\n\nimport {\n    arrayBufferToBase64,\n    base64ToArrayBuffer,\n    ensureNotFalsy,\n    flatClone\n} from '../utils/index.ts';\n\n\n/**\n * @link https://github.com/WICG/compression/blob/main/explainer.md\n */\nexport async function compressBase64(\n    mode: CompressionMode,\n    base64String: string\n): Promise<string> {\n    const arrayBuffer = base64ToArrayBuffer(base64String);\n    const stream = ensureNotFalsy(new Response(arrayBuffer).body)\n        .pipeThrough(new CompressionStream(mode));\n    const result = await new Response(stream).arrayBuffer();\n    return arrayBufferToBase64(result);\n}\nexport async function decompressBase64(\n    mode: CompressionMode,\n    base64String: string\n): Promise<string> {\n    const arrayBuffer = base64ToArrayBuffer(base64String);\n    const stream = ensureNotFalsy(new Response(arrayBuffer).body)\n        .pipeThrough(new DecompressionStream(mode));\n    const result = await new Response(stream).arrayBuffer();\n    return arrayBufferToBase64(result);\n}\n\n\n/**\n * A RxStorage wrapper that compresses attachment data on writes\n * and decompresses the data on reads.\n *\n * This is using the CompressionStream API,\n * @link https://caniuse.com/?search=compressionstream\n */\nexport function wrappedAttachmentsCompressionStorage<Internals, InstanceCreationOptions>(\n    args: {\n        storage: RxStorage<Internals, InstanceCreationOptions>;\n    }\n): RxStorage<Internals, InstanceCreationOptions> {\n    return Object.assign(\n        {},\n        args.storage,\n        {\n            async createStorageInstance<RxDocType>(\n                params: RxStorageInstanceCreationParams<RxDocType, any>\n            ) {\n                if (\n                    !params.schema.attachments ||\n                    !params.schema.attachments.compression\n                ) {\n                    return args.storage.createStorageInstance(params);\n                }\n\n                const mode = params.schema.attachments.compression;\n\n                async function modifyToStorage(docData: RxDocumentWriteData<RxDocType>) {\n                    await Promise.all(\n                        Object.values(docData._attachments).map(async (attachment) => {\n                            if (!(attachment as RxAttachmentWriteData).data) {\n                                return;\n                            }\n                            const attachmentWriteData = attachment as RxAttachmentWriteData;\n                            attachmentWriteData.data = await compressBase64(mode, attachmentWriteData.data);\n                        })\n                    );\n                    return docData;\n                }\n                function modifyAttachmentFromStorage(attachmentData: string): Promise<string> {\n                    return decompressBase64(mode, attachmentData);\n                }\n\n                /**\n                 * Because this wrapper resolves the attachments.compression,\n                 * we have to remove it before sending it to the underlying RxStorage.\n                 * which allows underlying storages to detect wrong configurations\n                 * like when compression is set to false but no attachment-compression module is used.\n                 */\n                const childSchema = flatClone(params.schema);\n                childSchema.attachments = flatClone(childSchema.attachments);\n                delete ensureNotFalsy(childSchema.attachments).compression;\n\n                const instance = await args.storage.createStorageInstance(\n                    Object.assign(\n                        {},\n                        params,\n                        {\n                            schema: childSchema\n                        }\n                    )\n                );\n\n                return wrapRxStorageInstance(\n                    params.schema,\n                    instance,\n                    modifyToStorage,\n                    d => d,\n                    modifyAttachmentFromStorage\n                );\n            }\n        }\n    );\n}\n"],"mappings":";;;;;;;;AAAA,IAAAA,cAAA,GAAAC,OAAA;AASA,IAAAC,MAAA,GAAAD,OAAA;AAQA;AACA;AACA;AACO,eAAeE,cAAcA,CAChCC,IAAqB,EACrBC,YAAoB,EACL;EACf,IAAMC,WAAW,GAAG,IAAAC,0BAAmB,EAACF,YAAY,CAAC;EACrD,IAAMG,MAAM,GAAG,IAAAC,qBAAc,EAAC,IAAIC,QAAQ,CAACJ,WAAW,CAAC,CAACK,IAAI,CAAC,CACxDC,WAAW,CAAC,IAAIC,iBAAiB,CAACT,IAAI,CAAC,CAAC;EAC7C,IAAMU,MAAM,GAAG,MAAM,IAAIJ,QAAQ,CAACF,MAAM,CAAC,CAACF,WAAW,CAAC,CAAC;EACvD,OAAO,IAAAS,0BAAmB,EAACD,MAAM,CAAC;AACtC;AACO,eAAeE,gBAAgBA,CAClCZ,IAAqB,EACrBC,YAAoB,EACL;EACf,IAAMC,WAAW,GAAG,IAAAC,0BAAmB,EAACF,YAAY,CAAC;EACrD,IAAMG,MAAM,GAAG,IAAAC,qBAAc,EAAC,IAAIC,QAAQ,CAACJ,WAAW,CAAC,CAACK,IAAI,CAAC,CACxDC,WAAW,CAAC,IAAIK,mBAAmB,CAACb,IAAI,CAAC,CAAC;EAC/C,IAAMU,MAAM,GAAG,MAAM,IAAIJ,QAAQ,CAACF,MAAM,CAAC,CAACF,WAAW,CAAC,CAAC;EACvD,OAAO,IAAAS,0BAAmB,EAACD,MAAM,CAAC;AACtC;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,oCAAoCA,CAChDC,IAEC,EAC4C;EAC7C,OAAOC,MAAM,CAACC,MAAM,CAChB,CAAC,CAAC,EACFF,IAAI,CAACG,OAAO,EACZ;IACI,MAAMC,qBAAqBA,CACvBC,MAAuD,EACzD;MACE,IACI,CAACA,MAAM,CAACC,MAAM,CAACC,WAAW,IAC1B,CAACF,MAAM,CAACC,MAAM,CAACC,WAAW,CAACC,WAAW,EACxC;QACE,OAAOR,IAAI,CAACG,OAAO,CAACC,qBAAqB,CAACC,MAAM,CAAC;MACrD;MAEA,IAAMpB,IAAI,GAAGoB,MAAM,CAACC,MAAM,CAACC,WAAW,CAACC,WAAW;MAElD,eAAeC,eAAeA,CAACC,OAAuC,EAAE;QACpE,MAAMC,OAAO,CAACC,GAAG,CACbX,MAAM,CAACY,MAAM,CAACH,OAAO,CAACI,YAAY,CAAC,CAACC,GAAG,CAAC,MAAOC,UAAU,IAAK;UAC1D,IAAI,CAAEA,UAAU,CAA2BC,IAAI,EAAE;YAC7C;UACJ;UACA,IAAMC,mBAAmB,GAAGF,UAAmC;UAC/DE,mBAAmB,CAACD,IAAI,GAAG,MAAMjC,cAAc,CAACC,IAAI,EAAEiC,mBAAmB,CAACD,IAAI,CAAC;QACnF,CAAC,CACL,CAAC;QACD,OAAOP,OAAO;MAClB;MACA,SAASS,2BAA2BA,CAACC,cAAsB,EAAmB;QAC1E,OAAOvB,gBAAgB,CAACZ,IAAI,EAAEmC,cAAc,CAAC;MACjD;;MAEA;AAChB;AACA;AACA;AACA;AACA;MACgB,IAAMC,WAAW,GAAG,IAAAC,gBAAS,EAACjB,MAAM,CAACC,MAAM,CAAC;MAC5Ce,WAAW,CAACd,WAAW,GAAG,IAAAe,gBAAS,EAACD,WAAW,CAACd,WAAW,CAAC;MAC5D,OAAO,IAAAjB,qBAAc,EAAC+B,WAAW,CAACd,WAAW,CAAC,CAACC,WAAW;MAE1D,IAAMe,QAAQ,GAAG,MAAMvB,IAAI,CAACG,OAAO,CAACC,qBAAqB,CACrDH,MAAM,CAACC,MAAM,CACT,CAAC,CAAC,EACFG,MAAM,EACN;QACIC,MAAM,EAAEe;MACZ,CACJ,CACJ,CAAC;MAED,OAAO,IAAAG,oCAAqB,EACxBnB,MAAM,CAACC,MAAM,EACbiB,QAAQ,EACRd,eAAe,EACfgB,CAAC,IAAIA,CAAC,EACNN,2BACJ,CAAC;IACL;EACJ,CACJ,CAAC;AACL","ignoreList":[]}