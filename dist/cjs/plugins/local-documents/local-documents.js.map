{"version":3,"file":"local-documents.js","names":["_index","require","_rxjs","_localDocumentsHelper","_rxStorageHelper","insertLocal","id","data","state","getLocalDocStateByParent","docData","_deleted","_meta","getDefaultRxDocumentMeta","_rev","getDefaultRevision","_attachments","writeSingle","storageInstance","document","then","newDocData","docCache","getCachedRxDocument","upsertLocal","getLocal","existing","docPromise","incrementalModify","found","getLatestDocumentDataIfExists","Promise","resolve","getSingleDocument","getLocal$","$","pipe","startWith","mergeMap","cE","changeEvent","doc","changeEventOrDoc","isLocal","documentId","use","filter","filterFlagged","map"],"sources":["../../../../src/plugins/local-documents/local-documents.ts"],"sourcesContent":["import {\n    getDefaultRevision,\n    getDefaultRxDocumentMeta\n} from '../../plugins/utils/index.ts';\n\nimport type {\n    RxChangeEvent,\n    RxCollection,\n    RxDatabase,\n    RxDocument,\n    RxDocumentWriteData,\n    RxLocalDocument,\n    RxLocalDocumentData\n} from '../../types/index.d.ts';\n\nimport {\n    filter,\n    map,\n    startWith,\n    mergeMap\n} from 'rxjs';\nimport { Observable } from 'rxjs';\n\nimport { getLocalDocStateByParent } from './local-documents-helper.ts';\nimport { getSingleDocument, writeSingle } from '../../rx-storage-helper.ts';\n\n\n\n/**\n * save the local-document-data\n * throws if already exists\n */\nexport async function insertLocal<DocData extends Record<string, any> = any, Reactivity = unknown>(\n    this: RxDatabase | RxCollection,\n    id: string,\n    data: DocData\n): Promise<RxLocalDocument<DocData, any, Reactivity>> {\n    const state = await getLocalDocStateByParent(this);\n\n    // create new one\n    const docData: RxDocumentWriteData<RxLocalDocumentData<DocData>> = {\n        id: id,\n        data,\n        _deleted: false,\n        _meta: getDefaultRxDocumentMeta(),\n        _rev: getDefaultRevision(),\n        _attachments: {}\n    };\n\n    return writeSingle(\n        state.storageInstance,\n        {\n            document: docData\n        },\n        'local-document-insert'\n    ).then(newDocData => state.docCache.getCachedRxDocument(newDocData) as any);\n}\n\n/**\n * save the local-document-data\n * overwrites existing if exists\n */\nexport function upsertLocal<DocData extends Record<string, any> = any, Reactivity = unknown>(\n    this: any,\n    id: string,\n    data: DocData\n): Promise<RxLocalDocument<DocData, any, Reactivity>> {\n    return this.getLocal(id)\n        .then((existing: RxDocument) => {\n            if (!existing) {\n                // create new one\n                const docPromise = this.insertLocal(id, data);\n                return docPromise;\n            } else {\n                // update existing\n                return existing.incrementalModify(() => {\n                    return data;\n                });\n            }\n        });\n}\n\nexport async function getLocal<DocData = any, Reactivity = unknown>(this: any, id: string): Promise<RxLocalDocument<DocData, any, Reactivity> | null> {\n    const state = await getLocalDocStateByParent(this);\n    const docCache = state.docCache;\n\n    // check in doc-cache\n    const found = docCache.getLatestDocumentDataIfExists(id);\n    if (found) {\n        return Promise.resolve(\n            docCache.getCachedRxDocument(found) as any\n        );\n    }\n\n    // if not found, check in storage instance\n    return getSingleDocument(state.storageInstance, id)\n        .then((docData) => {\n            if (!docData) {\n                return null;\n            }\n            return state.docCache.getCachedRxDocument(docData) as any;\n        });\n}\n\nexport function getLocal$<DocData = any, Reactivity = unknown>(this: RxCollection, id: string): Observable<RxLocalDocument<DocData, any, Reactivity> | null> {\n    return this.$.pipe(\n        startWith(null),\n        mergeMap(async (cE: RxChangeEvent<RxLocalDocumentData> | null) => {\n            if (cE) {\n                return {\n                    changeEvent: cE\n                };\n            } else {\n                const doc = await this.getLocal(id);\n                return {\n                    doc: doc\n                };\n            }\n        }),\n        mergeMap(async (changeEventOrDoc) => {\n            if (changeEventOrDoc.changeEvent) {\n                const cE = changeEventOrDoc.changeEvent;\n                if (!cE.isLocal || cE.documentId !== id) {\n                    return {\n                        use: false\n                    };\n                } else {\n                    const doc = await this.getLocal(id);\n                    return {\n                        use: true,\n                        doc: doc\n                    };\n                }\n            } else {\n                return {\n                    use: true,\n                    doc: changeEventOrDoc.doc\n                };\n            }\n        }),\n        filter(filterFlagged => filterFlagged.use),\n        map(filterFlagged => {\n            return filterFlagged.doc as any;\n        })\n    );\n}\n"],"mappings":"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","ignoreList":[]}