{"version":3,"file":"rx-local-document.js","names":["_rxjs","require","_overwritable","_rxChangeEvent","_rxDocument","_rxError","_rxStorageHelper","_index","_localDocumentsHelper","_rxDatabase","RxDocumentParent","createRxDocumentConstructor","RxLocalDocumentClass","_RxDocumentParent","id","jsonData","parent","_this2","call","_inheritsLoose2","default","RxLocalDocumentPrototype","isLocal","allAttachments$","newRxError","document","primaryPath","primary","$","_this","state","getFromMapOrThrow","LOCAL_DOC_STATE_BY_PARENT_RESOLVED","pipe","filter","changeEvent","documentId","map","getDocumentDataOfRxChangeEvent","startWith","docCache","getLatestDocumentData","distinctUntilChanged","prev","curr","_rev","docData","getCachedRxDocument","shareReplay","RXJS_SHARE_REPLAY_DEFAULTS","$$","db","getRxDatabaseFromLocalDocument","reactivity","getReactivityFactory","fromObservable","getLatest","_data","deleted$$","deleted$","deleted","latestDocData","get","objPath","undefined","newRxTypeError","valueObj","getProperty","overwritable","deepFreezeWhenDevMode","get$","isDevMode","includes","localDocument","data","get$$","incrementalModify","mutationFunction","getLocalDocStateByParent","incrementalWriteQueue","addWrite","then","result","incrementalPatch","patch","Object","entries","forEach","k","v","_saveData","newData","oldData","storageInstance","bulkWrite","previous","res","docResult","success","error","flatClone","remove","writeData","_deleted","_meta","getDefaultRxDocumentMeta","getDefaultRevision","_attachments","writeSingle","writeResult","INIT_DONE","_init","docBaseProto","basePrototype","props","getOwnPropertyNames","key","exists","getOwnPropertyDescriptor","desc","defineProperty","getThrowingFun","functionName","createRxLocalDocument","newDoc","setPrototypeOf","prototype","doc","isRxDatabase","database"],"sources":["../../../../src/plugins/local-documents/rx-local-document.ts"],"sourcesContent":["import { Observable } from 'rxjs';\nimport {\n    distinctUntilChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith\n} from 'rxjs';\nimport { overwritable } from '../../overwritable.ts';\nimport { getDocumentDataOfRxChangeEvent } from '../../rx-change-event.ts';\nimport {\n    basePrototype,\n    createRxDocumentConstructor\n} from '../../rx-document.ts';\nimport {\n    newRxError,\n    newRxTypeError\n} from '../../rx-error.ts';\nimport { writeSingle } from '../../rx-storage-helper.ts';\nimport type {\n    LocalDocumentModifyFunction,\n    RxCollection,\n    RxDatabase,\n    RxDocument,\n    RxDocumentData,\n    RxDocumentWriteData,\n    RxLocalDocument,\n    RxLocalDocumentData\n} from '../../types/index.d.ts';\nimport {\n    flatClone,\n    getDefaultRevision,\n    getDefaultRxDocumentMeta,\n    getFromMapOrThrow,\n    getProperty,\n    RXJS_SHARE_REPLAY_DEFAULTS\n} from '../../plugins/utils/index.ts';\nimport { getLocalDocStateByParent, LOCAL_DOC_STATE_BY_PARENT_RESOLVED } from './local-documents-helper.ts';\nimport { isRxDatabase } from '../../rx-database.ts';\n\nconst RxDocumentParent = createRxDocumentConstructor() as any;\n\nclass RxLocalDocumentClass<DocData = any> extends RxDocumentParent {\n    constructor(\n        public readonly id: string,\n        jsonData: DocData,\n        public readonly parent: RxCollection | RxDatabase\n    ) {\n        super(null, jsonData);\n    }\n}\n\n\n\nconst RxLocalDocumentPrototype: any = {\n    get isLocal() {\n        return true;\n    },\n\n    //\n    // overwrites\n    //\n    get allAttachments$() {\n        // this is overwritten here because we cannot re-set getters on the prototype\n        throw newRxError('LD1', {\n            document: this\n        });\n    },\n    get primaryPath() {\n        return 'id';\n    },\n    get primary() {\n        return this.id;\n    },\n    get $(): Observable<RxLocalDocument<any, any>> {\n        const _this: RxLocalDocumentClass = this as any;\n        const state = getFromMapOrThrow(LOCAL_DOC_STATE_BY_PARENT_RESOLVED, this.parent);\n        return _this.parent.$.pipe(\n            filter(changeEvent => changeEvent.documentId === this.primary),\n            filter(changeEvent => changeEvent.isLocal),\n            map(changeEvent => getDocumentDataOfRxChangeEvent(changeEvent)),\n            startWith(state.docCache.getLatestDocumentData(this.primary)),\n            distinctUntilChanged((prev, curr) => prev._rev === curr._rev),\n            map(docData => state.docCache.getCachedRxDocument(docData)),\n            shareReplay(RXJS_SHARE_REPLAY_DEFAULTS)\n        ) as Observable<any>;\n    },\n    get $$(): any {\n        const _this: RxLocalDocumentClass = this as any;\n        const db = getRxDatabaseFromLocalDocument(_this);\n        const reactivity = db.getReactivityFactory();\n        return reactivity.fromObservable(\n            _this.$,\n            _this.getLatest()._data,\n            db\n        );\n    },\n    get deleted$$() {\n        const _this: RxLocalDocumentClass = this as any;\n        const db = getRxDatabaseFromLocalDocument(_this);\n        const reactivity = db.getReactivityFactory();\n        return reactivity.fromObservable(\n            _this.deleted$,\n            _this.getLatest().deleted,\n            db\n        );\n    },\n    getLatest(this: RxLocalDocument<any>): RxLocalDocument<any> {\n        const state = getFromMapOrThrow(LOCAL_DOC_STATE_BY_PARENT_RESOLVED, this.parent);\n        const latestDocData = state.docCache.getLatestDocumentData(this.primary);\n        return state.docCache.getCachedRxDocument(latestDocData) as any;\n    },\n    get(this: RxDocument, objPath: string) {\n        objPath = 'data.' + objPath;\n\n        if (!this._data) {\n            return undefined;\n        }\n        if (typeof objPath !== 'string') {\n            throw newRxTypeError('LD2', {\n                objPath\n            });\n        }\n\n        let valueObj = getProperty(this._data, objPath);\n        valueObj = overwritable.deepFreezeWhenDevMode(valueObj);\n        return valueObj;\n    },\n    get$(this: RxDocument, objPath: string) {\n        objPath = 'data.' + objPath;\n\n        if (overwritable.isDevMode()) {\n            if (objPath.includes('.item.')) {\n                throw newRxError('LD3', {\n                    objPath\n                });\n            }\n            if (objPath === this.primaryPath) {\n                throw newRxError('LD4');\n            }\n        }\n        return this.$\n            .pipe(\n                map(localDocument => localDocument._data),\n                map(data => getProperty(data, objPath)),\n                distinctUntilChanged()\n            );\n    },\n    get$$(this: RxDocument, objPath: string) {\n        const db = getRxDatabaseFromLocalDocument(this as any);\n        const reactivity = db.getReactivityFactory();\n        return reactivity.fromObservable(\n            this.get$(objPath),\n            this.getLatest().get(objPath),\n            db\n        );\n    },\n    async incrementalModify<DocData>(\n        this: RxLocalDocument<any, DocData>,\n        mutationFunction: LocalDocumentModifyFunction<any>\n    ) {\n        const state = await getLocalDocStateByParent(this.parent);\n\n        return state.incrementalWriteQueue.addWrite(\n            this._data as any,\n            async (docData) => {\n                docData.data = await mutationFunction(docData.data, this);\n                return docData;\n            }\n        ).then(result => state.docCache.getCachedRxDocument(result as any));\n    },\n    incrementalPatch(patch: Partial<any>) {\n        return this.incrementalModify((docData: any) => {\n            Object\n                .entries(patch)\n                .forEach(([k, v]) => {\n                    docData[k] = v;\n                });\n            return docData;\n        });\n    },\n    async _saveData(this: RxLocalDocument<any>, newData: RxDocumentData<RxLocalDocumentData>) {\n        const state = await getLocalDocStateByParent(this.parent);\n        const oldData: RxDocumentData<RxLocalDocumentData> = this._data;\n        newData.id = (this as any).id;\n        return state.storageInstance.bulkWrite([{\n            previous: oldData,\n            document: newData\n        }], 'local-document-save-data')\n            .then((res) => {\n                const docResult = res.success[0];\n                if (!docResult) {\n                    throw res.error[0];\n                }\n                newData = flatClone(newData);\n                newData._rev = docResult._rev;\n            });\n    },\n\n    async remove(this: RxLocalDocument<any>): Promise<RxLocalDocument<any>> {\n        const state = await getLocalDocStateByParent(this.parent);\n        const writeData: RxDocumentWriteData<RxLocalDocumentData> = {\n            id: this._data.id,\n            data: {},\n            _deleted: true,\n            _meta: getDefaultRxDocumentMeta(),\n            _rev: getDefaultRevision(),\n            _attachments: {}\n        };\n        return writeSingle(state.storageInstance, {\n            previous: this._data,\n            document: writeData\n        }, 'local-document-remove')\n            .then((writeResult) => state.docCache.getCachedRxDocument(writeResult) as any);\n    }\n};\n\n\n\nlet INIT_DONE = false;\nconst _init = () => {\n    if (INIT_DONE) return;\n    else INIT_DONE = true;\n\n    // add functions of RxDocument\n    const docBaseProto = basePrototype;\n    const props = Object.getOwnPropertyNames(docBaseProto);\n    props.forEach(key => {\n        const exists = Object.getOwnPropertyDescriptor(RxLocalDocumentPrototype, key);\n        if (exists) return;\n        const desc: any = Object.getOwnPropertyDescriptor(docBaseProto, key);\n        Object.defineProperty(RxLocalDocumentPrototype, key, desc);\n    });\n\n\n    /**\n     * Overwrite things that do not work on local documents\n     * with a throwing function.\n     */\n    const getThrowingFun = (k: string) => () => {\n        throw newRxError('LD6', {\n            functionName: k\n        });\n    };\n    [\n        'populate',\n        'update',\n        'putAttachment',\n        'getAttachment',\n        'allAttachments'\n    ].forEach((k: string) => RxLocalDocumentPrototype[k] = getThrowingFun(k));\n};\n\n\n\nexport function createRxLocalDocument<DocData>(\n    data: RxDocumentData<RxLocalDocumentData<DocData>>,\n    parent: any\n): RxLocalDocument<DocData> {\n    _init();\n    const newDoc = new RxLocalDocumentClass(data.id, data, parent);\n    Object.setPrototypeOf(newDoc, RxLocalDocumentPrototype);\n    newDoc.prototype = RxLocalDocumentPrototype;\n    return newDoc as any;\n}\n\n\nexport function getRxDatabaseFromLocalDocument(doc: RxLocalDocument<any> | RxLocalDocumentClass) {\n    const parent = doc.parent;\n    if (isRxDatabase(parent)) {\n        return parent;\n    } else {\n        return (parent as RxCollection).database;\n    }\n}\n"],"mappings":"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","ignoreList":[]}