{"version":3,"file":"couchdb.d.js","names":[],"sources":["../../../src/types/couchdb.d.ts"],"sourcesContent":["import type {\n    MangoQuery,\n    MangoQuerySelector,\n    MangoQuerySortPart\n} from './rx-query.d.ts';\nimport type { BulkWriteRow } from './rx-storage.d.ts';\n\n/**\n * This file contains types that are CouchDB specific\n */\n\nexport interface CouchReplicationOptions {\n    live?: boolean;\n    retry?: boolean;\n    filter?: Function;\n    doc_ids?: string[];\n    query_params?: any;\n    view?: any;\n    since?: number | 'now';\n    heartbeat?: number;\n    timeout?: number;\n    batch_size?: number;\n    batches_limit?: number;\n    back_off_function?: Function;\n    checkpoint?: false | 'source' | 'target';\n    include_docs?: boolean;\n    limit?: number;\n}\n\nexport interface CouchChangesOptionsBase {\n    include_docs?: boolean;\n    conflicts?: boolean;\n    attachments?: boolean;\n    binary?: boolean;\n    descending?: boolean;\n    since?: any;\n    limit?: number;\n    timeout?: any;\n    heartbeat?: number | boolean;\n    filter?: any;\n    doc_ids?: string | string[];\n    query_param?: any;\n    view?: any;\n    return_docs?: boolean;\n    batch_size?: number;\n    style?: string;\n}\n\nexport interface CouchChangesOptionsLive extends CouchChangesOptionsBase {\n    live: true;\n}\n\nexport interface CouchChangesOptionsNonLive extends CouchChangesOptionsBase {\n    live: false;\n}\ninterface CouchChangesOnChangeEvent {\n    on: (eventName: string, handler: Function) => void;\n    off: (eventName: string, handler: Function) => void;\n    cancel(): void;\n}\n\nexport type CouchWriteError = {\n    /**\n      * status code from couchdb\n      * 409 for 'conflict'\n    */\n    status: number;\n    error: true;\n    /**\n     * primary key value of the errored document\n     */\n    id: string;\n};\n\n/**\n * possible couch-settings\n * @link https://couchdb.com/api.html#create_database\n */\nexport interface CouchSettings {\n    auto_compaction?: boolean;\n    revs_limit?: number;\n    ajax?: any;\n    fetch?: any;\n    auth?: any;\n    skip_setup?: boolean;\n    storage?: any;\n    size?: number;\n    location?: string;\n    iosDatabaseLocation?: string;\n}\n\n/**\n * options for couch.allDocs()\n * @link https://couchdb.com/api.html#batch_fetch\n */\nexport type CouchAllDocsOptions = {\n    include_docs?: boolean;\n    conflicts?: boolean;\n    attachments?: boolean;\n    binary?: boolean;\n    startkey?: string;\n    endkey?: string;\n    inclusive_end?: boolean;\n    limit?: number;\n    skip?: number;\n    descending?: boolean;\n    key?: string;\n    keys?: string[];\n    update_seq?: string;\n\n    // undocument but needed\n    revs?: boolean;\n    deleted?: 'ok';\n};\n\nexport type CouchSyncHandlerEvents = 'change' | 'paused' | 'active' | 'error' | 'complete';\nexport type CouchSyncHandler = {\n    on(ev: CouchSyncHandlerEvents, fn: (el: any) => void): void;\n    off(ev: CouchSyncHandlerEvents, fn: any): void;\n    cancel(): void;\n};\n\nexport type CouchChangeRow = {\n    id: string;\n    seq: number;\n    deleted?: true;\n    changes: {\n        rev: 'string';\n    }[];\n    /**\n     * only if include_docs === true\n     */\n    doc?: CouchChangeDoc;\n};\n\nexport type CouchAttachmentMeta = {\n    digest: string;\n    content_type: string;\n    length: number;\n    stub: boolean;\n\n    /**\n     * 'revpos indicates the generation number (numeric prefix in the revID) at which the attachment was last altered'\n     *  @link https://github.com/couchbase/couchbase-lite-ios/issues/1200#issuecomment-206444554\n     */\n    revpos: number;\n};\n\nexport type CouchAttachmentWithData = CouchAttachmentMeta & {\n    /**\n     * Base64 string with the data\n     * or directly a buffer\n     */\n    data: Blob;\n    type: string;\n    /**\n     * If set, must be false\n     * because we have the full data and not only a stub.\n     */\n    stub?: false;\n};\n\nexport type CouchChangeDoc = {\n    _id: string;\n    _rev: string;\n    /**\n     * True if the document is deleted.\n     */\n    _deleted?: boolean;\n    _attachments: {\n        [attachmentId: string]: CouchAttachmentMeta;\n    };\n};\n\nexport type WithAttachments<Data> = Data & {\n    /**\n     * Intentional optional,\n     * if the document has no attachments,\n     * we do NOT have an empty object.\n     */\n    _attachments?: {\n        [attachmentId: string]: CouchAttachmentMeta;\n    };\n};\nexport type WithAttachmentsData<Data> = Data & {\n    /**\n     * Intentional optional,\n     * if the document has no attachments,\n     * we do NOT have an empty object.\n     */\n    _attachments?: {\n        [attachmentId: string]: CouchAttachmentWithData;\n    };\n};\n\n\nexport type WithCouchMeta<Data> = Data & {\n    _rev: string;\n    _attachments?: {\n        [attachmentId: string]: CouchAttachmentMeta;\n    };\n    _deleted?: boolean;\n};\n\nexport type CouchdbChangesResult = {\n    results: CouchChangeRow[];\n    last_seq: number;\n};\n\ndeclare type Debug = {\n    enable(what: string): void;\n    disable(): void;\n};\n\nexport type CouchDbSorting = (string | string[] | { [k: string]: 'asc' | 'desc' | 1 | -1; })[];\n\n// this is not equal to the standard MangoQuery\n// because of different sorting\nexport type CouchdbQuery = MangoQuery & {\n    sort?: CouchDbSorting;\n};\n\nexport type CouchBulkDocResultRow = {\n    ok: boolean;\n    id: string;\n    rev: string;\n\n    error?: 'conflict';\n    reason?: string;\n};\n\nexport type CouchCheckpoint = {\n    sequence: number;\n};\n\nexport type CouchBulkDocOptions = {\n    new_edits?: boolean;\n\n    // custom options for RxDB\n    isDeeper?: boolean;\n    custom?: {\n        primaryPath: string;\n        writeRowById: Map<string, BulkWriteRow<any>>;\n        insertDocsById: Map<string, any>;\n        previousDocsInDb: Map<string, any>;\n        context: string;\n    };\n};\n\nexport type CouchMangoQuery<DocType> = MangoQuery<DocType> & {\n    index: undefined;\n    use_index?: string;\n};\n\nexport type ExplainedCouchQuery<DocType> = {\n    dbname: string;\n    index: {\n        ddoc: string | null;\n        name: string; // 'idx-rxdb-index-age,_id'\n        type: 'json';\n        def: {\n            fields: MangoQuerySortPart<DocType>[];\n        };\n    };\n    selector: MangoQuerySelector<DocType>;\n    range: {\n        start_key: any[];\n        end_key: any[];\n    };\n    opts: {\n        use_index: string[];\n        bookmark: string;\n        sort: MangoQuerySortPart<DocType>[];\n        conflicts: boolean;\n        r: any[];\n    };\n    skip: number;\n};\n\nexport type CouchAllDocsResponse = {\n    offset: number;\n    rows: {\n        id: string;\n        doc: any;\n        key: string;\n        value: {\n            rev: string;\n            deleted?: boolean;\n        };\n        error?: 'not_found' | string;\n    }[];\n    total_rows: number;\n};\n"],"mappings":"","ignoreList":[]}